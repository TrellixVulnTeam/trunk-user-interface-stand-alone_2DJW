[{"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/index.js":"1","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/store.js":"2","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/serviceWorker.js":"3","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/App.js":"4","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/polyfill.js":"5","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/sagas.js":"6","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/reducers.js":"7","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/index.js":"8","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheLayout.js":"9","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/utils/setAuthToken.js":"10","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/home/dashboard.js":"11","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/auth/login.js":"12","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/auth/actions.js":"13","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/components/private-route/PrivateRoute.js":"14","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/part/saga.js":"15","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/part/reducer.js":"16","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/trash.js":"17","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/customers.js":"18","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/stock-management.js":"19","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/print.js":"20","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/settings.js":"21","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/notification.js":"22","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/edit.js":"23","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/logo-negative.js":"24","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/enquiry.js":"25","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/logo.js":"26","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/sygnet.js":"27","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/auth/errors.js":"28","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/partSection/reducer.js":"29","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/customer/reducer.js":"30","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/car/reducer.js":"31","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/manufacture/reducer.js":"32","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/enquiry/reducer.js":"33","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/index.js":"34","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/auth/constants.js":"35","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/part/constants.js":"36","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/part/service.js":"37","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/auth/reducer.js":"38","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/partSection/saga.js":"39","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/car/saga.js":"40","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/enquiry/saga.js":"41","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/manufacture/saga.js":"42","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/customer/saga.js":"43","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/auth/saga.js":"44","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/partSection/constants.js":"45","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/manufacture/constants.js":"46","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/car/constants.js":"47","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/customer/constants.js":"48","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/enquiry/constants.js":"49","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheSidebar.js":"50","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheHeaderDropdownTasks.js":"51","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheHeaderDropdownMssg.js":"52","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheHeaderDropdownNotif.js":"53","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheHeaderDropdown.js":"54","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/utils/fetch.js":"55","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/customer/service.js":"56","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/enquiry/service.js":"57","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/utils/global.js":"58","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/auth/srevice.js":"59","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/manufacture/service.js":"60","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/car/service.js":"61","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/_nav.js":"62","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/partSection/service.js":"63","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/config/api.js":"64","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheHeader.js":"65","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheFooter.js":"66","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheContent.js":"67","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/routes.js":"68","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/customer/add-customer.js":"69","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/customer/list-customer.js":"70","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/masters/make.js":"71","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/masters/cars.js":"72","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/masters/partSections.js":"73","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/masters/parts.js":"74","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/enquiryPartHeaders.js":"75","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/enquiryCarDetail.js":"76","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/editenquiryPartHeaders.js":"77","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/enquiryList.js":"78","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/editenquiryCarDetail.js":"79","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/enquiryParts.js":"80","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/404/404.js":"81","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/utils/capitalize.js":"82","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/customer/actions.js":"83","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/manufacture/actions.js":"84","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/part/actions.js":"85","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/car/actions.js":"86","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/partSection/action.js":"87","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/enquiry/actions.js":"88","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/container/enquiryPartHeaders.js":"89","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/container/enquiryParts.js":"90","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/container/partDetails.js":"91","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/container/partNumber.js":"92","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/container/partPrice.js":"93","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/container/editenquiryPartHeaders.js":"94","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/editenquiryParts.js":"95","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/customer/edit-customer.js":"96"},{"size":820,"mtime":1639579140849,"results":"97","hashOfConfig":"98"},{"size":436,"mtime":1639579140859,"results":"99","hashOfConfig":"98"},{"size":4614,"mtime":1639579140858,"results":"100","hashOfConfig":"98"},{"size":1834,"mtime":1639579140845,"results":"101","hashOfConfig":"98"},{"size":1895,"mtime":1639579140853,"results":"102","hashOfConfig":"98"},{"size":738,"mtime":1639579140857,"results":"103","hashOfConfig":"98"},{"size":817,"mtime":1640028709613,"results":"104","hashOfConfig":"98"},{"size":4217,"mtime":1639579140846,"results":"105","hashOfConfig":"98"},{"size":413,"mtime":1639579140848,"results":"106","hashOfConfig":"98"},{"size":328,"mtime":1639579140859,"results":"107","hashOfConfig":"98"},{"size":110,"mtime":1639579140856,"results":"108","hashOfConfig":"98"},{"size":6378,"mtime":1639587576313,"results":"109","hashOfConfig":"98"},{"size":563,"mtime":1639579140849,"results":"110","hashOfConfig":"98"},{"size":577,"mtime":1639579140847,"results":"111","hashOfConfig":"98"},{"size":2258,"mtime":1640026754750,"results":"112","hashOfConfig":"98"},{"size":3022,"mtime":1640026758025,"results":"113","hashOfConfig":"98"},{"size":1041,"mtime":1639579140847,"results":"114","hashOfConfig":"98"},{"size":1058,"mtime":1639579140846,"results":"115","hashOfConfig":"98"},{"size":4595,"mtime":1639579140847,"results":"116","hashOfConfig":"98"},{"size":2401,"mtime":1639579140847,"results":"117","hashOfConfig":"98"},{"size":12729,"mtime":1639579140847,"results":"118","hashOfConfig":"98"},{"size":1362,"mtime":1639579140846,"results":"119","hashOfConfig":"98"},{"size":972,"mtime":1639579140846,"results":"120","hashOfConfig":"98"},{"size":2497,"mtime":1639579140846,"results":"121","hashOfConfig":"98"},{"size":2063,"mtime":1639579140846,"results":"122","hashOfConfig":"98"},{"size":2489,"mtime":1639579140846,"results":"123","hashOfConfig":"98"},{"size":978,"mtime":1639579140847,"results":"124","hashOfConfig":"98"},{"size":314,"mtime":1639579140849,"results":"125","hashOfConfig":"98"},{"size":3179,"mtime":1640025727841,"results":"126","hashOfConfig":"98"},{"size":3060,"mtime":1640029131475,"results":"127","hashOfConfig":"98"},{"size":3048,"mtime":1640022731675,"results":"128","hashOfConfig":"98"},{"size":3118,"mtime":1640021746411,"results":"129","hashOfConfig":"98"},{"size":10656,"mtime":1641230549184,"results":"130","hashOfConfig":"98"},{"size":596,"mtime":1639579140849,"results":"131","hashOfConfig":"98"},{"size":314,"mtime":1639579140849,"results":"132","hashOfConfig":"98"},{"size":871,"mtime":1639579140852,"results":"133","hashOfConfig":"98"},{"size":593,"mtime":1639579140852,"results":"134","hashOfConfig":"98"},{"size":623,"mtime":1639579140849,"results":"135","hashOfConfig":"98"},{"size":2286,"mtime":1640025792862,"results":"136","hashOfConfig":"98"},{"size":2191,"mtime":1640022959529,"results":"137","hashOfConfig":"98"},{"size":9363,"mtime":1641230439255,"results":"138","hashOfConfig":"98"},{"size":2241,"mtime":1640021683939,"results":"139","hashOfConfig":"98"},{"size":2655,"mtime":1640061856403,"results":"140","hashOfConfig":"98"},{"size":1477,"mtime":1639579140849,"results":"141","hashOfConfig":"98"},{"size":1169,"mtime":1639579140853,"results":"142","hashOfConfig":"98"},{"size":1154,"mtime":1639579140852,"results":"143","hashOfConfig":"98"},{"size":833,"mtime":1639579140851,"results":"144","hashOfConfig":"98"},{"size":1186,"mtime":1639770283004,"results":"145","hashOfConfig":"98"},{"size":4119,"mtime":1641228743093,"results":"146","hashOfConfig":"98"},{"size":1704,"mtime":1639579140849,"results":"147","hashOfConfig":"98"},{"size":2253,"mtime":1639579140848,"results":"148","hashOfConfig":"98"},{"size":4788,"mtime":1639579140848,"results":"149","hashOfConfig":"98"},{"size":2543,"mtime":1639579140848,"results":"150","hashOfConfig":"98"},{"size":1146,"mtime":1640064493906,"results":"151","hashOfConfig":"98"},{"size":1843,"mtime":1640066381003,"results":"152","hashOfConfig":"98"},{"size":624,"mtime":1639808083621,"results":"153","hashOfConfig":"98"},{"size":3041,"mtime":1641230425874,"results":"154","hashOfConfig":"98"},{"size":480,"mtime":1639579140859,"results":"155","hashOfConfig":"98"},{"size":142,"mtime":1639579140850,"results":"156","hashOfConfig":"98"},{"size":544,"mtime":1639579140852,"results":"157","hashOfConfig":"98"},{"size":577,"mtime":1639579140851,"results":"158","hashOfConfig":"98"},{"size":1734,"mtime":1641096353837,"results":"159","hashOfConfig":"98"},{"size":544,"mtime":1639579140853,"results":"160","hashOfConfig":"98"},{"size":189,"mtime":1639760551341,"results":"161","hashOfConfig":"98"},{"size":1796,"mtime":1640065036415,"results":"162","hashOfConfig":"98"},{"size":292,"mtime":1639769988932,"results":"163","hashOfConfig":"98"},{"size":1091,"mtime":1639579140848,"results":"164","hashOfConfig":"98"},{"size":3394,"mtime":1639813073641,"results":"165","hashOfConfig":"98"},{"size":16198,"mtime":1641105614083,"results":"166","hashOfConfig":"98"},{"size":6214,"mtime":1640029508378,"results":"167","hashOfConfig":"98"},{"size":9604,"mtime":1640021633003,"results":"168","hashOfConfig":"98"},{"size":10681,"mtime":1640023247558,"results":"169","hashOfConfig":"98"},{"size":10014,"mtime":1641108207636,"results":"170","hashOfConfig":"98"},{"size":10561,"mtime":1641107304028,"results":"171","hashOfConfig":"98"},{"size":4640,"mtime":1639669792525,"results":"172","hashOfConfig":"98"},{"size":12478,"mtime":1641230782021,"results":"173","hashOfConfig":"98"},{"size":5574,"mtime":1641221616974,"results":"174","hashOfConfig":"98"},{"size":8107,"mtime":1639681441697,"results":"175","hashOfConfig":"98"},{"size":11673,"mtime":1640104486575,"results":"176","hashOfConfig":"98"},{"size":3118,"mtime":1639667967626,"results":"177","hashOfConfig":"98"},{"size":234,"mtime":1639579140853,"results":"178","hashOfConfig":"98"},{"size":94,"mtime":1639579140859,"results":"179","hashOfConfig":"98"},{"size":656,"mtime":1639808094425,"results":"180","hashOfConfig":"98"},{"size":532,"mtime":1639579140852,"results":"181","hashOfConfig":"98"},{"size":505,"mtime":1639579140852,"results":"182","hashOfConfig":"98"},{"size":493,"mtime":1639579140851,"results":"183","hashOfConfig":"98"},{"size":538,"mtime":1639579140853,"results":"184","hashOfConfig":"98"},{"size":2380,"mtime":1641230406620,"results":"185","hashOfConfig":"98"},{"size":2183,"mtime":1641102000123,"results":"186","hashOfConfig":"98"},{"size":1865,"mtime":1639675359374,"results":"187","hashOfConfig":"98"},{"size":4356,"mtime":1639579140855,"results":"188","hashOfConfig":"98"},{"size":6361,"mtime":1641222731489,"results":"189","hashOfConfig":"98"},{"size":8968,"mtime":1641222180124,"results":"190","hashOfConfig":"98"},{"size":2436,"mtime":1641221501259,"results":"191","hashOfConfig":"98"},{"size":3175,"mtime":1639720543080,"results":"192","hashOfConfig":"98"},{"size":13490,"mtime":1641105630559,"results":"193","hashOfConfig":"98"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},"hikia3",{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"196"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"196"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"196"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"196"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"196"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"196"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"196"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"196"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"196"},"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/index.js",[],["396","397"],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/store.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/serviceWorker.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/App.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/polyfill.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/sagas.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/reducers.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/index.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheLayout.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/utils/setAuthToken.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/home/dashboard.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/auth/login.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/auth/actions.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/components/private-route/PrivateRoute.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/part/saga.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/part/reducer.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/trash.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/customers.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/stock-management.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/print.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/settings.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/notification.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/edit.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/logo-negative.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/enquiry.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/logo.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/assets/icons/sygnet.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/auth/errors.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/partSection/reducer.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/customer/reducer.js",["398"],"import * as Actions from './constants';\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n    customers: [],\n    pager: {},\n    editCustomer: '',\n    createError: null,\n    createSuccess: false,\n    deleteError: null,\n    deleteSuccess: false,\n    updateError: null,\n    updateSuccess: false,\n}\n\nexport default function customerReducer(state = initialState, action) {\n    switch (action.type) {\n        case Actions.CREATE_CUSTOMER:\n            return {\n                ...state,\n                createSuccess: false,\n                createError: null\n            };\n        case Actions.CREATE_CUSTOMER_SUCCESS:\n            return {\n                ...state,\n                createSuccess: true,\n                createError: null\n            };\n        case Actions.CREATE_CUSTOMER_ERROR:\n            return {\n                ...state,\n                createSuccess: false,\n                createError: action.error\n            };\n        /**\n         * update customer\n         */\n        case Actions.UPDATE_CUSTOMER:\n            return {\n                ...state,\n                updateSuccess: false,\n                updateError: null\n            };\n        case Actions.UPDATE_CUSTOMER_SUCCESS:\n            return {\n                ...state,\n                updateSuccess: true,\n                updateError: null\n            };\n        case Actions.UPDATE_CUSTOMER_ERROR:\n            return {\n                ...state,\n            updateSuccess: false,\n            updateError: action.updateError\n            };\n        case Actions.LOAD_CUSTOMER:\n            return {\n                ...state,\n            };\n        case Actions.LOAD_CUSTOMER_SUCCESS:\n            return {\n                ...state,\n                customers: action.payload,\n                pager: action.pager\n            }\n        case Actions.LOAD_CUSTOMER_ERROR:\n            return {\n                ...state,\n            }\n        /**\n         * LOAD CUSTOMER BY ID\n         */\n         case Actions.LOAD_CUSTOMER_BY_ID:\n            return {\n                ...state,\n            };\n        case Actions.LOAD_CUSTOMER_BY_ID_SUCCESS:\n            return {\n                ...state,\n                editCustomer: action.payload,\n            }\n        case Actions.LOAD_CUSTOMER_BY_ID_ERROR:\n            return {\n                ...state,\n            }\n        /**\n         * delete customer\n         */\n         case Actions.DELETE_CUSTOMER:\n            return {\n                ...state,\n                deleteSuccess: false,\n                deleteError: null\n            };\n        case Actions.DELETE_CUSTOMER_SUCCESS:\n            return {\n                ...state,\n                pager: state.customers.filter(item => item.ID !== action.payload),\n                deleteSuccess: true,\n                deleteError: null\n            }\n        case Actions.DELETE_CUSTOMER_ERROR:\n            return {\n                ...state,\n                deleteSuccess: false,\n                deleteError: action.error\n            }\n        default: \n            return state;\n    }\n}","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/car/reducer.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/manufacture/reducer.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/enquiry/reducer.js",["399","400"],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/index.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/auth/constants.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/part/constants.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/part/service.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/auth/reducer.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/partSection/saga.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/car/saga.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/enquiry/saga.js",["401","402"],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/manufacture/saga.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/customer/saga.js",["403"],"import * as Actions from './constants';\nimport { \n    createCustomer, \n    loadCustomer,\n    loadCustomerByID,\n    deleteCustomer,\n    updateCustomer\n } from './service';\nconst { put, call, takeEvery, take } = require(\"@redux-saga/core/effects\");\n/**\n * Create Customer saga\n */\nfunction* createCustomerSaga({ formData }) {\n    try {\n        const {data} = yield call(createCustomer, formData);\n        yield put({\n            type: Actions.CREATE_CUSTOMER_SUCCESS,\n            payload: data,\n        });\n\n    } catch (error) {\n        yield put({\n            type: Actions.CREATE_CUSTOMER_ERROR,\n            error: error.Account,\n        });\n    }\n}\n\n\n/**\n * Load customer\n */\nfunction* loadCustomerSaga({ query }) {\n    try {\n        const { data, pager } = yield call(loadCustomer, { query });\n        yield put({\n            type: Actions.LOAD_CUSTOMER_SUCCESS,\n            payload: data,\n            pager: pager\n        });\n    } catch (error) {\n        yield put({\n            type: Actions.LOAD_CUSTOMER_ERROR,\n            error: error,\n        });\n    }\n}\n\n/**\n * Load customer by id\n */\n function* loadCustomerbyIDSaga({ id }) {\n    try {\n        const { data } = yield call(loadCustomerByID, { id });\n        yield put({\n            type: Actions.LOAD_CUSTOMER_BY_ID_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        yield put({\n            type: Actions.LOAD_CUSTOMER_BY_ID_ERROR,\n            error: error,\n        });\n    }\n}\n\n/**\n *  DELETE CUSTOMER\n */\n\n function* deleteCustomerSaga({id}) {\n    try {\n        const { data } = yield call(deleteCustomer, {id});\n        yield put({\n            type: Actions.DELETE_CUSTOMER_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        yield put({\n            type: Actions.DELETE_CUSTOMER_ERROR,\n            error: \"Can't delete this record!\",\n        });\n    }\n}\n\n/**\n *  UPDATE CUSTOMER\n */\n\n function* updateCustomerSaga({ formData }) {\n    try {\n        const { data } = yield call(updateCustomer, formData);\n        yield put({\n            type: Actions.UPDATE_CUSTOMER_SUCCESS,\n            payload: data,\n        });\n\n    } catch (error) {\n        yield put({\n            type: Actions.UPDATE_CUSTOMER_ERROR,\n            error: error.Account,\n        });\n    }\n}\n\nexport default function* customerSaga() {\n    yield takeEvery(Actions.CREATE_CUSTOMER, createCustomerSaga);\n    yield takeEvery(Actions.LOAD_CUSTOMER, loadCustomerSaga);\n    yield takeEvery(Actions.DELETE_CUSTOMER, deleteCustomerSaga);\n    yield takeEvery(Actions.LOAD_CUSTOMER_BY_ID, loadCustomerbyIDSaga);\n    yield takeEvery(Actions.UPDATE_CUSTOMER, updateCustomerSaga);\n}\n","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/auth/saga.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/partSection/constants.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/manufacture/constants.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/car/constants.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/customer/constants.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/enquiry/constants.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheSidebar.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheHeaderDropdownTasks.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheHeaderDropdownMssg.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheHeaderDropdownNotif.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheHeaderDropdown.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/utils/fetch.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/customer/service.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/enquiry/service.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/utils/global.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/auth/srevice.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/manufacture/service.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/car/service.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/_nav.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/partSection/service.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/config/api.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheHeader.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheFooter.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/containers/TheContent.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/routes.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/customer/add-customer.js",["404"],"import React, { Component } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n  CInputFile,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createCustomer } from '../../modules/customer/actions';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nimport validator from 'validator';\n\nimport $ from 'jquery';\nwindow.jquery = window.$ = $\n\nclass AddCustomer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      companyName: '',\n      contactPersonFirstname: '',\n      contactPersonLastname: '',\n      contactPersonMobile: '',\n      contactPersonMobilePrefix: '+971',\n      contactPersonEmail: '',\n      companyPhone: '',\n      companyPhonePrefix: '+971',\n      emirates: '0',\n      buildingNumber: '',\n      street: '',\n      address: '',\n      profileImagefile: '',\n      tradeLicenseFile: '',\n    }\n    this.onSubmit = this.onSubmit.bind(this);\n    this.removeTradeLicense = this.removeTradeLicense.bind(this);\n    this.saveTradeLicenseFiles = this.saveTradeLicenseFiles.bind(this);\n    this.saveProfileImageFile = this.saveProfileImageFile.bind(this);\n  }\n\n  componentDidUpdate( prevProps ) {\n    const { \n      createSuccess,\n      createError,\n    } = this.props;\n    const { \n      createSuccess: prevCreateSuccess, \n      createError: prevcreateError,\n    } = prevProps;\n\n    // create success\n    if(createSuccess && createSuccess !== prevCreateSuccess) {\n        Object.keys(this.state).map((key, index) => {\n            this.setState({[key] : \"\"});\n        });\n        NotificationManager.success(\"Customer created successfully\");\n    }\n\n    // create success\n    if(createError !== null && createError !== prevcreateError) {\n        NotificationManager.error(createError);\n    }\n\n  }\n\n  componentDidMount() {\n\n    // profile image button\n    $(\".profileUploader\").on(\"click\", function() {\n      $(\".profile-upload-button\").trigger('click');\n    });\n\n    // trade licesnse button\n    $(\".tradeLicenseUploader\").click(function(){\n      $(\"#trade-license-files\").trigger('click');\n    });\n\n  }\n\n  \n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  \n  // reset\n  handleReset = (resetForm) => {\n    if (window.confirm('Reset?')) {\n      resetForm();\n    }\n  };\n\n  onSubmit = async (e)  => {\n    e.preventDefault();\n    const customerData = this.state;\n    var pattern = new RegExp(/^[0-9\\b]+$/);\n\n    //Company Name\n    if(customerData.companyName === \"\") {\n      NotificationManager.warning(\"Company name is required\");\n      return false;\n    }\n\n    // Mobile Number\n    if (customerData.contactPersonMobile === \"\") {\n      NotificationManager.warning(\"Mobile number is required!\");\n      return false;\n    }else if(!pattern.test(customerData.contactPersonMobile)) {\n      NotificationManager.warning(\"Please enter only number.\");\n      return false;\n    }else if(customerData.contactPersonMobile.length !== 9) {\n      NotificationManager.warning(\"Please enter valid phone number.\");\n      return false;\n    }\n\n    // Contact Email\n    if(!validator.isEmail(customerData.contactPersonEmail)) {\n      NotificationManager.warning(\"Enter valid email\");\n      return false;\n    }\n\n    const formData = new FormData();\n    formData.append(\"companyName\", customerData.companyName);\n    formData.append(\"contactPersonFirstname\", customerData.contactPersonFirstname);\n    formData.append(\"contactPersonLastname\", customerData.contactPersonLastname);\n    formData.append(\"contactPersonMobile\", customerData.contactPersonMobile);\n    formData.append(\"contactPersonEmail\", customerData.contactPersonEmail);\n    formData.append(\"companyPhone\", customerData.companyPhone);\n    formData.append(\"emirates\", customerData.emirates);\n    formData.append(\"buildingNumber\", customerData.buildingNumber);\n    formData.append(\"street\", customerData.street);\n    formData.append(\"address\", customerData.address);\n    formData.append(\"profileImagefile\", customerData.profileImagefile);\n    for (const key of Object.keys(this.state.tradeLicenseFile)) {\n      formData.append('tradeLicenseFile', this.state.tradeLicenseFile[key])\n    }\n    this.props.createCustomer( formData );\n  }\n\n  // Save Profile Images\n  saveProfileImageFile = (e) => {\n    this.setState({\n      profileImagefile: e.target.files[0]\n    });\n  }\n\n  // Save Trade License\n  saveTradeLicenseFiles = (e) => {\n    this.setState({ tradeLicenseFile: e.target.files })\n  }\n\n  closeProfilePreviewContainer = () => {\n    this.setState({\n      profileImagefile: ''\n    })\n  }\n\n  removeTradeLicense = (key) => {\n    const { tradeLicenseFile } = this.state;\n    const fileListArr = Array.from(tradeLicenseFile);\n    fileListArr.splice(key, 1);\n    this.setState({\n      tradeLicenseFile: fileListArr\n    })\n  }\n\n  render() {\n    const { profileImagefile, tradeLicenseFile } = this.state;\n    return (\n      <CRow>\n        <NotificationContainer/>\n        <CCol xs=\"12\" md=\"8\" className=\"offset-2\">\n          <CCard>\n            <CCardBody>\n              <CForm className=\"form-horizontal\" onSubmit={this.onSubmit}>\n                <CFormGroup row>\n                  <CCol md=\"4\">\n                      <CLabel htmlFor=\"hf-email\">Company Name</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"8\">\n                      <CInput \n                        type=\"text\" \n                        id=\"companyName\" \n                        name=\"companyName\"\n                        value={this.state.companyName}\n                        placeholder=\"Name of your company\"\n                        onChange={this.onChange}\n                      />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"4\">\n                      <CLabel htmlFor=\"hf-password\">Contact person First Name</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"8\">\n                      <CInput \n                        type=\"text\" \n                        id=\"contactPersonFirstname\" \n                        name=\"contactPersonFirstname\"\n                        value={this.state.contactPersonFirstname}\n                        placeholder=\"First name of contact person\"\n                        onChange={this.onChange}\n                      />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"4\">\n                      <CLabel htmlFor=\"hf-password\">Contact person Last Name</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"8\">\n                      <CInput \n                        type=\"text\" \n                        id=\"contactPersonLastname\" \n                        name=\"contactPersonLastname\"\n                        value={this.state.contactPersonLastname}\n                        placeholder=\"Last name of contact person\"\n                        onChange={this.onChange}\n                      />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"4\">\n                      <CLabel htmlFor=\"hf-password\">Contact person Mobile</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"2\">\n                      <CInput \n                        type=\"tel\" \n                        id=\"contactPersonMobilePrefix\" \n                        name=\"contactPersonMobilePrefix\"\n                        value=\"+971\"\n                        readOnly=\"readOnly\"\n                      />\n                  </CCol>\n                  <CCol xs=\"12\" md=\"6\">\n                      <CInput \n                        type=\"tel\" \n                        id=\"contactPersonMobile\" \n                        name=\"contactPersonMobile\"\n                        value={this.state.contactPersonMobile}\n                        placeholder=\"55 555 5555\"\n                        onChange={this.onChange}\n                      />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"4\">\n                      <CLabel htmlFor=\"hf-password\">Contact person Email</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"8\">\n                      <CInput \n                        type=\"text\" \n                        id=\"contactPersonEmail\" \n                        name=\"contactPersonEmail\"\n                        value={this.state.contactPersonEmail}\n                        placeholder=\"Email ID of contact person\"\n                        onChange={this.onChange}\n                      />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"4\">\n                      <CLabel htmlFor=\"hf-password\">Company Phone</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"2\">\n                      <CInput \n                        type=\"tel\" \n                        id=\"companyPhonePrefix\" \n                        name=\"companyPhonePrefix\"\n                        value=\"+971\"\n                        readOnly=\"readOnly\"\n                      />\n                  </CCol>\n                  <CCol xs=\"12\" md=\"6\">\n                      <CInput \n                        type=\"tel\" \n                        id=\"companyPhone\" \n                        name=\"companyPhone\"\n                        value={this.state.companyPhone}\n                        placeholder=\"66 666 6666\"\n                        onChange={this.onChange}\n                      />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"4\">\n                      <CLabel htmlFor=\"hf-password\">Emirates</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"8\">\n                      <CSelect name=\"emirates\" id=\"emirates\" value={this.state.emirates} placeholder=\"Emirates\" onChange={this.onChange} >\n                        <option value=\"0\">Please select</option>\n                        <option value=\"1\">Abu Dhabi</option>\n                        <option value=\"2\">Dubai</option>\n                        <option value=\"3\">Sharjah</option>\n                        <option value=\"4\">Ajman</option>\n                        <option value=\"5\">Umm Al-Quwain</option>\n                        <option value=\"6\">Fujairah</option>\n                      </CSelect>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"4\">\n                      <CLabel htmlFor=\"hf-password\">Building Number</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"8\">\n                      <CInput \n                        type=\"text\" \n                        id=\"buildingNumber\" \n                        name=\"buildingNumber\"\n                        value={this.state.buildingNumber}\n                        placeholder=\"Building Number\"\n                        onChange={this.onChange}\n                      />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"4\">\n                      <CLabel htmlFor=\"hf-password\">Street</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"8\">\n                      <CInput \n                        type=\"text\" \n                        id=\"street\" \n                        name=\"street\"\n                        value={this.state.street}\n                        placeholder=\"Street Name\"\n                        onChange={this.onChange}\n                      />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"4\">\n                      <CLabel htmlFor=\"hf-password\">Address</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"8\">\n                      <CInput \n                        type=\"text\" \n                        id=\"address\" \n                        name=\"address\"\n                        value={this.state.address}\n                        placeholder=\"Address\"\n                        onChange={this.onChange}\n                      />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"4\">\n                      <CLabel htmlFor=\"hf-password\">Upload trade license</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"8\">\n                    <div className='profile-container'>\n                      <CInputFile id=\"trade-license-files\" name=\"tradeLicenseFile\" onChange={this.saveTradeLicenseFiles} multiple/>\n                      {\n                        Object.keys(tradeLicenseFile).map((key, index) => \n                          <div className='profile-image-preview-container trade-link'>\n                            <img\n                              src={tradeLicenseFile[key]? URL.createObjectURL(tradeLicenseFile[key]) : null} \n                              alt={tradeLicenseFile[key]? tradeLicenseFile[key].name : null}/>\n                            <div onClick={() => this.removeTradeLicense(key)} className=\"profile-close-container\">\n                              <i class=\"fa fa-trash fa-lg\"></i>\n                            </div>\n                          </div>\n                        )\n                      }\n                      <div className='tradeLicenseUploader'>\n                        <div className='icon-container'>\n                          <i class=\"fa fa-image fa-2x\"></i>\n                          <p className='icon-text'>Upload trade license</p>\n                        </div>\n                      </div>\n                    </div>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"4\">\n                      <CLabel htmlFor=\"hf-password\">Upload profile image/  company logo</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"8\">\n                      <div className='profile-container'>\n                        <CInputFile className=\"profile-upload-button\" id=\"file-input\" name=\"profileImagefile\" onChange={this.saveProfileImageFile}/>\n                        {\n                          profileImagefile !== '' ?\n                          <div className='profile-image-preview-container'> \n                            <img\n                              src={profileImagefile? URL.createObjectURL(profileImagefile) : ''} \n                              alt={profileImagefile? profileImagefile.name : null}/>\n                            <div onClick={this.closeProfilePreviewContainer} className=\"profile-close-container\">\n                              <i class=\"fa fa-trash fa-lg\"></i>\n                            </div>\n                          </div>\n                          :\n                          <></>\n                        }\n                        <div className='profileUploader'>\n                          <div className='icon-container'>\n                            <i class=\"fa fa-image fa-2x\"></i>\n                            <p className='icon-text'>Upload profile image</p>\n                          </div>\n                        </div>\n                      </div>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                    <CCol xs=\"12\" md=\"12\" className=\"text-center\">\n                      <CButton className=\"customer-create-button\" type=\"submit\" color=\"primary\"><CIcon name=\"cil-save\" /> CREATE CUSTOMER</CButton>\n                    </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    )\n  }\n}\n\nAddCustomer.propTypes = {\n  customerErrors: PropTypes.object.isRequired,\n  customer: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  customerErrors: state.customerErrors,\n  customer: state.customer,\n  createSuccess: state.customer.createSuccess,\n  createError: state.customer.createError,\n});\nexport default connect(\n  mapStateToProps,\n  { createCustomer }\n)(AddCustomer);\n","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/customer/list-customer.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/masters/make.js",["405"],"import React, { Component } from 'react'\nimport {\n  CForm,\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n  CFormGroup,\n  CInput,\n  CButton,\n  CAlert,\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { Link } from 'react-router-dom';\nimport { \n    createManufacture, \n    loadManufacture, \n    deleteManufacture,\n    updateManufacture\n} from 'src/modules/masters/manufacture/actions';\nimport 'react-notifications/lib/notifications.css';\nimport capitalize from 'src/utils/capitalize';\n\nclass Make extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      manufacture: '',\n      button: 'ADD',\n      ID: '',\n    }\n    this.loadManufacture = this.loadManufacture.bind(this);\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  componentDidMount() {\n    this.loadManufacture();\n  }\n\n  componentDidUpdate( prevProps ) {\n    const { \n      createSuccess,\n      createError,\n      deleteSuccess,\n      deleteError,\n      updateSuccess,\n      updateError\n    } = this.props;\n    const { \n      createSuccess: prevCreateSuccess, \n      createError: prevcreateError,\n      deleteSuccess: prevdeleteSuccess ,\n      deleteError: prevdeleteError,\n      updateSuccess: prevupdateSuccess,\n      updateError: prevupdateError\n    } = prevProps;\n\n    // create success\n    if(createSuccess && createSuccess !== prevCreateSuccess) {\n        NotificationManager.success(\"Manufacture created successfully\");\n    }\n\n    // create success\n    if(createError !== null && createError !== prevcreateError) {\n        NotificationManager.error(createError);\n    }\n\n    // delete success\n    if(deleteSuccess && deleteSuccess !== prevdeleteSuccess) {\n        NotificationManager.warning(\"Manufacture deleted successfully\");\n    }\n\n    // delete error\n    if(deleteError && deleteError !== prevdeleteError) {\n        NotificationManager.error(deleteError);\n    }\n    // update success\n    if(updateSuccess && updateSuccess !== prevupdateSuccess) {\n      NotificationManager.success(\"Manufacture updated successfully\");\n    }\n\n    // update error\n    if(updateError && updateError !== prevupdateError) {\n      NotificationManager.error(updateError);\n    }\n\n    this.loadManufacture();\n  }\n\n  loadManufacture = () => {\n    const params = new URLSearchParams(this.props.location.search);\n    const page = parseInt(params.get('page')) || 1;\n    if (page !== this.props.pager.currentPage) {\n      const query = {};\n      query.pages = page;\n      this.props.loadManufacture({ query });\n    }\n  }\n\n  delete = (id) => {\n    if (window.confirm(\"Are you sure?\")) {  \n      this.props.deleteManufacture({id});  \n    }  \n  } \n\n  edit = (data) => {\n    this.setState({\n      manufacture: data.Name,\n      ID: data.ID,\n      button: 'UPDATE'\n    })\n  }\n\n  clear = () => {\n    this.setState({\n      manufacture: '',\n      button: 'ADD'\n    })\n  }\n\n\n  add = e => {\n    e.preventDefault();\n    if(this.state.manufacture === \"\")\n    {\n      NotificationManager.warning(\"Manufacture is required\");\n      return false;\n    }\n\n    const formData = this.state;\n    const car = {};\n    car.manufacture = capitalize(formData.manufacture);\n    this.props.createManufacture(car);\n    this.setState({manufacture: ''})\n  };\n\n  update = e => {\n    e.preventDefault();\n    if(this.state.manufacture === \"\")\n    {\n      NotificationManager.warning(\"Manufacture is required\");\n      return false;\n    }\n\n    const formData = this.state;\n    const datas = {};\n    datas.manufacture = capitalize(formData.manufacture);\n    datas.id = formData.ID;\n    this.props.updateManufacture({datas});\n    this.setState({manufacture: ''})\n  }\n\n  render() {\n    const { data, pager } = this.props;\n    return (\n      <>\n        <CRow>\n          <NotificationContainer/>\n        </CRow>\n        <CRow>\n          <CCol xs=\"12\" lg=\"12\">\n            <CCard>\n              <CCardBody>\n                <CForm className=\"form-horizontal\" noValidate onSubmit={this.state.button === 'ADD' ? this.add: this.update}>\n                  <CFormGroup row>\n                      <CCol xs=\"4\" md=\"8\">\n                        <CInput \n                            type=\"text\" \n                            id=\"manufacture\" \n                            name=\"manufacture\"\n                            value={this.state.manufacture}\n                            placeholder=\"Eg: Toyota\"\n                            onChange={this.onChange}\n                          />\n                      </CCol>\n                      <CCol xs=\"4\" md=\"2\">\n                        <CButton type=\"submit\" className=\"float-right btn-block\" color=\"primary\"><CIcon name=\"cil-save\" />&nbsp;\n                           { this.state.button }\n                        </CButton>\n                      </CCol>\n                      <CCol xs=\"4\" md=\"2\">\n                        <CButton onClick={() => this.clear()} type=\"button\" className=\"float-right btn-block\" color=\"secondary\"><CIcon name=\"cil-x\" />&nbsp;\n                           CLEAR\n                        </CButton>\n                      </CCol>\n                  </CFormGroup>\n                </CForm>\n                <table className=\"table table-striped\">\n                    <thead>\n                      <tr>\n                          <th>\n                            <span>#</span>\n                          </th>\n                          <th>\n                              <span>Manufacture</span>\n                          </th>\n                          <th>\n                              <span>Action</span>\n                          </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {data ? data.map((item, index) => \n                        <tr className='expandable-row'>\n                            <td>{pager.pages && pager.pages.length ? pager.startIndex + index +1: index+1}</td>\n                            <td>\n                                {item.Name}\n                            </td>\n                            <td>\n                                <button className=\"action-button\">\n                                  <CIcon onClick={() => this.edit(item)} name=\"cil-pencil\" height=\"18\" alt=\"Edit\"/>\n                                </button>\n                                <button className=\"action-button\">\n                                  <CIcon onClick={() => this.delete(item.ID)} name=\"cil-trash\" height=\"18\" alt=\"Delete\"/>\n                                </button>\n                            </td>\n                        </tr>\n                      ):null}\n                    </tbody>\n                    <tfoot>\n                      <tr>\n                        <td colSpan=\"3\">\n                          <div className=\"float-right\">\n                            {pager.pages && pager.pages.length &&\n                                <ul className=\"pagination\">\n                                    <li className={`page-item first-item ${pager.currentPage === 1 ? 'disabled' : ''}`}>\n                                        <Link to={{ search: `?page=1` }} className=\"page-link\">First</Link>\n                                    </li>\n                                    <li className={`page-item previous-item ${pager.currentPage === 1 ? 'disabled' : ''}`}>\n                                        <Link to={{ search: `?page=${pager.currentPage - 1}` }} className=\"page-link\">Previous</Link>\n                                    </li>\n                                    {pager.pages.map(page =>\n                                        <li key={page} className={`page-item number-item ${pager.currentPage === page ? 'active' : ''}`}>\n                                            <Link id={pager.currentPage} to={{ search: `?page=${page}` }} className=\"page-link\">{page}</Link>\n                                        </li>\n                                    )}\n                                    <li className={`page-item next-item ${pager.currentPage === pager.totalPages ? 'disabled' : ''}`}>\n                                        <Link to={{ search: `?page=${pager.currentPage + 1}` }} className=\"page-link\">Next</Link>\n                                    </li>\n                                    <li className={`page-item last-item ${pager.currentPage === pager.totalPages ? 'disabled' : ''}`}>\n                                        <Link to={{ search: `?page=${pager.totalPages}` }} className=\"page-link\">Last</Link>\n                                    </li>\n                                </ul>\n                            }                    \n                          </div>\n                        </td>\n                      </tr>\n                    </tfoot>\n                </table>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </>\n    )\n  }\n}\n\nMake.propTypes = {\n  manufacture: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = state => ({\n  data: state.manufacture.manufactures,\n  pager: state.manufacture.pager,\n  createSuccess: state.manufacture.createSuccess,\n  createError: state.manufacture.createError,\n  deleteSuccess: state.manufacture.deleteSuccess,\n  deleteError: state.manufacture.deleteError,\n  updateSuccess: state.manufacture.updateSuccess,\n  updateError: state.manufacture.updateError\n});\n\n\nexport default connect(\n  mapStateToProps,\n  { \n    createManufacture, \n    loadManufacture, \n    deleteManufacture, \n    updateManufacture \n  }\n)( Make );\n","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/masters/cars.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/masters/partSections.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/masters/parts.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/enquiryPartHeaders.js",["406"],"import React, { Component } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CCollapse,\n  CFade,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loadParts, addEnquiryPartHeader } from 'src/modules/enquiry/actions';\nimport 'react-notifications/lib/notifications.css';\nimport EnquiryPartHeaders from './container/enquiryPartHeaders';\nlet EnquiryID = '';\nlet Manufacture = '';\n\nclass EnquiryPartHeader extends Component {\nconstructor(props) {\n  super(props);\n  this.state = {\n    collapsed: true,\n    showElements: true,\n    enquiryPartHeaders: [{ index: Math.random(), partName: '', quantity: '' }]\n  }\n}\n\ncomponentDidUpdate(prevProps) {\n  // enquiry part header success\n  const { addHeaderSuccess } = this.props.data;\n  const {addHeaderSuccess: prevSuccess} = prevProps.data;\n  if (addHeaderSuccess && addHeaderSuccess !== prevSuccess) {\n    this.props.history.push('/enquiry/enquiry-parts');\n  }\n}\n\ncomponentDidMount() {\n  EnquiryID = localStorage.getItem('ENQUIRY-ID');\n  Manufacture = localStorage.getItem('MANUFACTURE');\n  const enquiryID = 0;\n  this.props.loadParts({ enquiryID });\n}\n\nhandleChange = (e) => {\n  if ([\"partName\", \"quantity\"].includes(e.target.name)) {\n      let enquiryPartHeaders = [...this.state.enquiryPartHeaders]\n      enquiryPartHeaders[e.target.dataset.id][e.target.name] = e.target.value;\n  } else {\n      this.setState({ [e.target.name]: e.target.value })\n  }\n}\n\nhandleSubmit = (e) => {\n  // submit\n  e.preventDefault();\n  let ManufactureEntry = [];\n  for(var i=0;i<this.state.enquiryPartHeaders.length;i++)\n  {\n      if(this.state.enquiryPartHeaders[i].partName==='' || this.state.enquiryPartHeaders[i].quantity==='')\n      {\n          NotificationManager.warning(\"Please Fill up Required Field.\");\n          return false;\n      }\n      ManufactureEntry.push(this.state.enquiryPartHeaders[i].partName);\n  }\n\n  // check duplicate entry\n  if(this.hasDuplicates(ManufactureEntry))\n  {\n      NotificationManager.warning(\"Duplicate entry not permitted!\");\n      return false;\n  }\n  \n  const datas = { formData: this.state, enquiryID: EnquiryID }\n  const parts = {};\n  parts.datas = datas;\n  this.props.addEnquiryPartHeader(parts);\n}\n\nhasDuplicates(array) {\n  return (new Set(array)).size !== array.length;\n}\n\naddNewRow = () => {\n  this.setState((prevState) => ({\n      enquiryPartHeaders: [...prevState.enquiryPartHeaders, { index: Math.random(), partName: \"\", quantity: \"\" }],\n  }));\n}\n\n\nclickOnDelete(record) {\n  this.setState({\n      enquiryPartHeaders: this.state.enquiryPartHeaders.filter(r => r !== record)\n  });\n}\n\n\nrender() {\n  const { parts } = this.props.data;\n  let { enquiryPartHeaders } = this.state;\n  return (\n      <CRow className=\"text-center justify-content-center\">\n        <NotificationContainer/>\n        <CCol xs=\"12\" sm=\"12\" lg=\"10\">\n          <CFade in={this.state.showElements} unmountOnExit={true}>\n            <CCard>\n              <CCollapse show={this.state.collapsed} timeout={1000}>\n                <CCardBody>\n                    <h4>Add Parts &#38; Quantity</h4>\n                    <form onSubmit={this.handleSubmit} onChange={this.handleChange}>\n                      <table className=\"table\">\n                        <tr>\n                          <th>Add/Select part name <br /> <CButton onClick={() => this.addMore()}>Add new parts</CButton></th>\n                          <th>Quantity</th>\n                          <th>Action</th>\n                        </tr>\n                        <EnquiryPartHeaders add={this.addNewRow} delete={this.clickOnDelete.bind(this)} enquiryPartHeaders={enquiryPartHeaders} part={parts} />\n                        <tr>\n                          <td colSpan=\"3\">\n                            <CButton onClick={() => this.props.history.goBack()} color=\"secondary\" className=\"mfe-3\" to=\"/enquiry\"><CIcon name=\"cil-x\" /> Cancel</CButton>\n                            <CButton type=\"submit\" color=\"secondary\" ><CIcon name=\"cil-save\" /> Save</CButton>\n                          </td>\n                        </tr>\n                      </table>\n                    </form>\n                </CCardBody>\n              </CCollapse>\n            </CCard>\n          </CFade>\n        </CCol>\n      </CRow>\n    )\n  }\n}\n\nEnquiryPartHeader.propTypes = {\n  enquiry: PropTypes.object.isRequired,\n};\nconst mapStateToProps = state => ({\n  data: state.enquiry\n});\nexport default connect(\nmapStateToProps,\n{ loadParts, addEnquiryPartHeader }\n)(EnquiryPartHeader);\n","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/enquiryCarDetail.js",["407","408","409","410"],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/editenquiryPartHeaders.js",["411","412","413"],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/enquiryList.js",["414"],"import React, { Component } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCol,\n  CFade,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport PartDetails from './container/partDetails';\nimport { \n  loadEnquiryCarDetails, \n  loadEnquiryPartDetails,\n  deleteEnquiry,\n} from 'src/modules/enquiry/actions';\nimport { Link } from 'react-router-dom';\n\nclass EnquiryList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      EnquiryID: '',\n    }\n  }\n\n  componentDidMount() {\n    this.loadEnquiryCarDetails();\n  }\n\n  componentDidUpdate() {\n    this.loadEnquiryCarDetails();\n  }\n\n  loadEnquiryCarDetails = () => {\n    const params = new URLSearchParams(this.props.location.search);\n    const page = parseInt(params.get('page')) || 1;\n    if (page !== this.props.pager.currentPage) {\n      const query = {};\n      query.pages = page;\n      this.props.loadEnquiryCarDetails({ query });\n    }\n  }\n\nformatAMPM(date) {\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var ampm = hours >= 12 ? 'pm' : 'am';\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n  minutes = minutes < 10 ? '0'+minutes : minutes;\n  var strTime = hours + ':' + minutes + ' ' + ampm;\n  return strTime;\n}\n\ngetPartDetail(id){\n  const datas = {};\n  datas.enquiryID = id;\n  this.props.loadEnquiryPartDetails(datas);\n  this.setState({\n    EnquiryID: id\n  });\n}\n\ndelete = (id) => {\n  if (window.confirm(\"Are you sure?\")) {\n    this.props.deleteEnquiry({id});  \n  }  \n} \n\nedit = (id) => {\n  if (window.confirm(\"Are you sure?\")) {\n    this.props.history.push(`./edit-enquiry-vehicle/${id}`);\n  } \n}\n\nrender() {\n  const { data, partDetails, pager, enquiryList} = this.props;\n  return (\n      <CRow className=\"text-center justify-content-center list-table\">\n          <CCol xs=\"12\" sm=\"12\" lg=\"12\">\n            <CFade>\n              <CCard>\n                <CCardBody>\n                  <table className=\"table table-striped\">\n                    <thead>\n                      <tr>\n                        <td>#</td>\n                        <th>Customer</th>\n                        <th>Chassis number</th>\n                        <th>Vehicle</th>\n                        <th>Item</th>\n                        <th>Enquiry Date</th>\n                        <th>Status</th>\n                        {/* <th>Print</th> */}\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                    {\n                      data ? data.map((item, index) => {\n                          let date = new Date(item.CreatedOn);\n                          let longMonth = date.toLocaleString('en-us', { month: 'long' });\n                          let day = date.getDate();\n                          let year = date.getFullYear();\n                          let time = this.formatAMPM(date);\n                          let items = item.enquiryPartHeaders;\n                          return(\n                            <>\n                            <tr className='expandable-row'>\n                              {/* <tr onClick={() => this.getPartDetail(item.ID)}> */}\n                                <td onClick={() => this.getPartDetail(item.ID)} >{pager.pages && pager.pages.length ? pager.startIndex + index +1: index+1}</td>\n                                <td onClick={() => this.getPartDetail(item.ID)} >{item.customer.CompanyName }</td>\n                                <td onClick={() => this.getPartDetail(item.ID)} >{item.ChassisNO}</td>\n                                <td onClick={() => this.getPartDetail(item.ID)} >{item.manufacture.Name}, {item.Year}, {item.car.CarName}, {item.Variant}</td>\n                                <td onClick={() => this.getPartDetail(item.ID)} >{items.filter(e => e.PartNumber !== 'parentHeader').length}</td>\n                                <td onClick={() => this.getPartDetail(item.ID)} >{day} { longMonth } { year }, {time}</td>\n                                <td onClick={() => this.getPartDetail(item.ID)} ><span className='badge badge-pill badge-danger'>{items.filter(e => e.PartNumber !== 'parentHeader').length === 0 ? 'Pending': 'Open'}</span></td>\n                                <td>\n                                  {/* <button onClick={() => this.getPartDetail(item.ID)}>\n                                    <CIcon name=\"cil-chevron-bottom\" height=\"18\" alt=\"view\" />\n                                  </button> */}\n                                  <button onClick={() => this.edit(item.ID)} className=\"action-button\">\n                                    <CIcon name=\"cil-pencil\" height=\"18\" alt=\"edit\"/>\n                                  </button>\n                                  <button onClick={() => this.delete(item.ID)} className=\"action-button\">\n                                    <CIcon name=\"cil-trash\" height=\"18\" alt=\"delete\"/>\n                                  </button>\n                                </td>\n                              </tr>\n                              {\n                                item.ID === this.state.EnquiryID ?\n                                <PartDetails partDetails={partDetails}  />\n                                :\n                                null\n                              }\n                              \n                            </>\n                          )\n                      }): null\n                    }\n                    </tbody>\n                    <tfoot>\n                      <tr>\n                        <td colSpan=\"9\">\n                          <div className=\"float-right\">\n                            {pager.pages && pager.pages.length &&\n                                <ul className=\"pagination\">\n                                    <li className={`page-item first-item ${pager.currentPage === 1 ? 'disabled' : ''}`}>\n                                        <Link to={{ search: `?page=1` }} className=\"page-link\">First</Link>\n                                    </li>\n                                    <li className={`page-item previous-item ${pager.currentPage === 1 ? 'disabled' : ''}`}>\n                                        <Link to={{ search: `?page=${pager.currentPage - 1}` }} className=\"page-link\">Previous</Link>\n                                    </li>\n                                    {pager.pages.map(page =>\n                                        <li key={page} className={`page-item number-item ${pager.currentPage === page ? 'active' : ''}`}>\n                                            <Link id={pager.currentPage} to={{ search: `?page=${page}` }} className=\"page-link\">{page}</Link>\n                                        </li>\n                                    )}\n                                    <li className={`page-item next-item ${pager.currentPage === pager.totalPages ? 'disabled' : ''}`}>\n                                        <Link to={{ search: `?page=${pager.currentPage + 1}` }} className=\"page-link\">Next</Link>\n                                    </li>\n                                    <li className={`page-item last-item ${pager.currentPage === pager.totalPages ? 'disabled' : ''}`}>\n                                        <Link to={{ search: `?page=${pager.totalPages}` }} className=\"page-link\">Last</Link>\n                                    </li>\n                                </ul>\n                            }                    \n                          </div>\n                        </td>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </CCardBody>\n              </CCard>\n            </CFade>\n          </CCol>\n      </CRow>\n    )\n  }\n}\n\nEnquiryList.propTypes = {\n  enquiry: PropTypes.object.isRequired,\n};\nconst mapStateToProps = state => ({\n  data: state.enquiry.enquiryList,\n  pager: state.enquiry.pager,\n  partDetails: state.enquiry.partDetails\n});\nexport default connect(\nmapStateToProps,\n{ \n  loadEnquiryCarDetails, \n  loadEnquiryPartDetails,\n  deleteEnquiry \n}\n)(EnquiryList);\n","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/editenquiryCarDetail.js",["415","416","417","418"],"import React, { Component } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CCollapse,\n  CFade,\n  CForm,\n  CFormGroup,\n  CInput,\n  CInputGroup,\n  CInputGroupAppend,\n  CLabel,\n  CSelect,\n  CRow,\n  CContainer,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { loadVehicle, loadMasters, updateEnquiryCar } from 'src/modules/enquiry/actions';\n// import CreatableSelect from 'react-select/creatable';\nimport Select from 'react-select';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css'; \nlet errors = {};\n\nclass EditenquiryCarDetail extends Component {\nconstructor(props) {\n  super(props);\n  this.state = {\n    collapsed: true,\n    showElements: true,\n    manufacture: '',\n    carName: '',\n    customer: '',\n    chassisNumber: '',\n    carID: '',\n    modelYear: '',\n    variant: '',\n    submitButtonType: 'Save',\n    enquiryID: ''\n  }\n  this.handleEnquiry = this.handleEnquiry.bind(this);\n}\n\ncomponentDidUpdate( prevProps ) {\n    // enquiry car success\n    const { enquiry, updateEnquirySuccess, data } = this.props.data;\n    const { enquiry: prevEnquiry, updateEnquirySuccess: prevUpdateEnquirySuccess } = prevProps.data;\n    // edit\n    if(enquiry && enquiry !== prevEnquiry) {\n        this.setState({\n            chassisNumber: enquiry.ChassisNO,\n            customer: enquiry.CustomerID,\n            manufacture: {'label': enquiry.manufacture.Name, 'value': enquiry.manufacture.ID},\n            carName: {'label': enquiry.car.CarName, 'value': enquiry.car.ID},\n            modelYear: enquiry.Year,\n            variant: enquiry.Variant,\n            enquiryID: enquiry.ID\n        })\n    }\n    // update\n    if(updateEnquirySuccess && updateEnquirySuccess !== prevUpdateEnquirySuccess) {\n      const id = this.props.match.params.id;\n      this.props.history.push(`../edit-enquiry-parts-header/${id}`);\n    }\n\n}\n\ncomponentDidMount() {\n  \n  if(this.props.match.params.id)\n  {\n    var enquiryID = this.props.match.params.id;\n  }\n  else \n  {\n    var enquiryID = 0;\n  }\n\n  this.props.loadMasters({ enquiryID });\n\n}\n\nonChange = e => {\n  this.setState({ [e.target.id]: e.target.value });\n};\n\nhandleEnquiry = e => {\n    e.preventDefault();\n    const formData = this.state;\n    \n\n    if(formData.customer === \"\")\n    {\n      NotificationManager.warning(\"Customer is required\");\n      return false\n    }\n\n    if(formData.chassisNumber === \"\")\n    {\n      NotificationManager.warning(\"Chassis number is required\");\n      return false\n    }\n\n    if(formData.manufacture.value === undefined)\n    {\n      NotificationManager.warning(\"Manufacture is required\");\n      return false\n    }\n\n    if(formData.carName.value === undefined)\n    {\n      NotificationManager.warning(\"Car is required\");\n      return false\n    }\n\n    if(formData.variant === \"\")\n    {\n      NotificationManager.warning(\"Variant is required\");\n      return false\n    }\n\n    const datas = {};\n    datas.manufacture = formData.manufacture.value;\n    datas.carName = formData.carName.value;\n    datas.customer = formData.customer;\n    datas.chassisNumber = formData.chassisNumber;\n    datas.modelYear = formData.modelYear;\n    datas.variant = formData.variant;\n    datas.enquiryID = formData.enquiryID;\n    this.props.updateEnquiryCar({ datas });\n      \n};\n\nhandleChange1 = ( manufacture ) => {\n    this.setState({ manufacture });\n};\n\nhandleChange2 = ( carName ) => {\n    this.setState({ carName });\n};\n\ngetVehicleInfo = chassisNumber => {\n  if(chassisNumber === \"\")\n  {\n    NotificationManager.warning(\"Chassis number is required\");\n    return false;\n  }\n  this.props.loadVehicle( chassisNumber );\n}\n\nrender() {\n  const { manufacture, customer, vehicleLoading, car, enquiry } = this.props.data;\n  // car\n  const carsOptions = car ? car.data.map((item, index) => {\n    return { value: item.ID, label: item.CarName }\n  }): null;\n\n  // manufacture\n  const manufactureOptions = manufacture ? manufacture.data.map((item, index) => {\n    return { value: item.ID, label: item.Name }\n  }): null;\n  return (\n    <>\n        <CRow>\n            <NotificationContainer/>\n        </CRow>\n        <CForm className=\"form-horizontal\" onSubmit={this.handleEnquiry}>\n          <CRow>\n          <CCol xs=\"12\" sm=\"6\" lg=\"5\" className=\"offset-1\">\n              <CFade timeout={300} in={this.state.showElements} unmountOnExit={true}>\n                <CCard>\n                  <CCollapse show={this.state.collapsed} timeout={1000}>\n                    <CCardBody>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"select\">Customer</CLabel>\n                          <div className=\"controls\">\n                            <CSelect custom\n                                id=\"customer\" \n                                name=\"customer\"\n                                onChange={this.onChange}\n                                value={this.state.customer}\n                            >\n                              <option value=\"0\">Please select</option>\n                              {\n                                customer ? customer.data.map((item, index) => {\n                                  return(\n                                    <option value={ item.ID }>{ item.CompanyName }</option>\n                                  )\n                                }):null\n                              }\n                            </CSelect>\n                            { errors.customer ? <div className=\"warning-text\">{ errors.customer }</div> : null}\n                          </div>\n                        </CFormGroup>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"appendedInput\">Manufacture</CLabel>\n                          <div className=\"controls\">\n                            <Select\n                                isClearable\n                                id=\"manufacture\" \n                                name=\"manufacture\"\n                                value={this.state.manufacture}\n                                options={manufactureOptions}\n                                placeholder=\"Eg: Toyota\"\n                                onChange={this.handleChange1}\n                            />\n                            { errors.manufacture ? <div className=\"warning-text\">{ errors.manufacture }</div> : null}\n                          </div>\n                        </CFormGroup>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"appendedInput\">Model Year</CLabel>\n                          <div className=\"controls\">\n                            <CInputGroup>\n                              <CInput \n                                size=\"16\" \n                                type=\"text\"\n                                id=\"modelYear\" \n                                name=\"modelYear\"\n                                onChange={this.onChange}\n                                value={this.state.modelYear}\n                              />\n                            </CInputGroup>\n                            { errors.modelYear ? <div className=\"warning-text\">{ errors.modelYear }</div> : null}\n                          </div>\n                        </CFormGroup>\n                    </CCardBody>\n                  </CCollapse>\n                </CCard>\n              </CFade>\n            </CCol>\n            <CCol xs=\"12\" sm=\"6\" lg=\"5\" className=\"pr-md-5\">\n              <CFade timeout={300} in={this.state.showElements} unmountOnExit={true}>\n                <CCard>\n                  <CCollapse show={this.state.collapsed} timeout={1000}>\n                    <CCardBody>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"select\">Chassis number</CLabel>\n                          <div className=\"controls\">\n                            <CInputGroup>\n                              <CInput \n                                type=\"text\" \n                                placeholder=\"Chassis Number\"\n                                id=\"chassisNumber\" \n                                name=\"chassisNumber\"\n                                onChange={this.onChange}\n                                value={this.state.chassisNumber}\n                              />\n                              <CInputGroupAppend>\n                                {\n                                  vehicleLoading ?\n                                  <CButton type=\"button\" color=\"primary\"> Searching...</CButton>\n                                  :\n                                  <CButton onClick={() => { this.getVehicleInfo(this.state.chassisNumber) }} type=\"button\" color=\"primary\"><CIcon name=\"cil-magnifying-glass\" /> Search</CButton>\n                                }\n                              </CInputGroupAppend>\n                            </CInputGroup>\n                            { errors.chassisNumber ? <div className=\"warning-text\">{ errors.chassisNumber }</div> : null}\n                          </div>\n                        </CFormGroup>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"appendedInput\">Car</CLabel>\n                          <div className=\"controls\">\n                            <Select\n                                isClearable\n                                id=\"carName\" \n                                name=\"carName\"\n                                value={this.state.carName}\n                                options={carsOptions}\n                                placeholder=\"Eg: Etios\"\n                                onChange={this.handleChange2}\n                            />\n                            { errors.types ? <div className=\"warning-text\">{ errors.types }</div> : null}\n                          </div>\n                        </CFormGroup>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"appendedInput\">Variant</CLabel>\n                          <div className=\"controls\">\n                            <CInputGroup>\n                              <CInput \n                                size=\"16\" \n                                type=\"text\"\n                                id=\"variant\" \n                                name=\"variant\"\n                                onChange={this.onChange}\n                                value={this.state.variant}\n                              />\n                            </CInputGroup>\n                            { errors.variant ? <div className=\"warning-text\">{ errors.variant }</div> : null}\n                          </div>\n                        </CFormGroup>\n                    </CCardBody>\n                  </CCollapse>\n                </CCard>\n              </CFade>\n            </CCol>\n          </CRow>\n          <div className=\"form-buttons align-items-center\">\n            <CContainer>\n              <CRow className=\"justify-content-center\">\n                <CCol className=\"text-center\" lg=\"12\" sm=\"12\">\n                  <CButton color=\"secondary\" className=\"mfe-3\" to=\"/enquiry\"><CIcon name=\"cil-x\" /> Cancel</CButton>\n                  <CButton type=\"submit\" color=\"primary\" ><CIcon name=\"cil-save\" /> Update</CButton>\n                </CCol>\n              </CRow>\n            </CContainer>\n          </div>\n        </CForm>\n      </>\n    )\n  }\n}\n\nEditenquiryCarDetail.propTypes = {\n  vehicle: PropTypes.object.isRequired,\n};\nconst mapStateToProps = state => ({\n  data: state.enquiry\n});\nexport default connect(\nmapStateToProps,\n{ loadVehicle, loadMasters, updateEnquiryCar }\n)(EditenquiryCarDetail);\n","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/enquiryParts.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/404/404.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/utils/capitalize.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/customer/actions.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/manufacture/actions.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/part/actions.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/car/actions.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/partSection/action.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/enquiry/actions.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/container/enquiryPartHeaders.js",["419"],"import React from \"react\";\nimport CIcon from '@coreui/icons-react'\nimport { CInput, CButton } from \"@coreui/react\";\nconst EnquiryPartHeaders = (props) => {\n    return(\n        props.enquiryPartHeaders.map((item, index) => {\n            let partName = `parts-${index}`, quantity = `quantity-${index}`;\n            return(\n                <tr key={item}>\n                    <td>\n                        <select className=\"custom-select\"  data-id={index}  name=\"partName\" id={partName}>\n                            <option value=\"\">Select Part Name</option>\n                        {\n                            props.part? props.part.map((item, index) => {\n                            return <optgroup label={item.Name}>\n                                {\n                                item.parts ? item.parts.map((item, index) => {\n                                    return <option value={item.ID}>{item.Name}</option>\n                                }): null\n                                }\n                            </optgroup>\n                            }): null\n                        }\n                        </select>\n                    </td>\n                    <td>\n                        <CInput\n                            placeholder=\"Enter Quantity\"\n                            className=\"custom-select\" \n                            data-id={index} \n                            id={quantity} \n                            name=\"quantity\"\n                            type=\"number\"\n                        />\n                    </td>\n                    <td>\n                        {\n                            index === 0?\n                            <a  onClick={() => props.add()} name=\"add\" height=\"25\" alt=\"Logo\"><CButton className=\"btn-primary\">+ ADD</CButton></a>\n                            :\n                            <button onClick={() => props.delete(item)} className=\"action-button\">\n                                <CIcon name=\"cil-trash\" height=\"18\" alt=\"Logo\"/>\n                            </button>\n                        }\n                    </td>\n                </tr>\n            )\n        })\n    )\n}\n\nexport default EnquiryPartHeaders;","/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/container/enquiryParts.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/container/partDetails.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/container/partNumber.js",["420"],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/container/partPrice.js",["421"],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/container/editenquiryPartHeaders.js",["422"],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/editenquiryParts.js",[],"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/customer/edit-customer.js",["423","424","425","426","427","428","429"],"import React, { Component } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n  CInputFile,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loadCustomerbyID, updateCustomer } from '../../modules/customer/actions';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport configApi from '../../config/api';\n\nimport validator from 'validator';\n\nimport $ from 'jquery';\nwindow.jquery = window.$ = $\n\nclass EditCustomer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      companyName: '',\n      contactPersonFirstname: '',\n      contactPersonLastname: '',\n      contactPersonMobile: '',\n      contactPersonMobilePrefix: '+971',\n      contactPersonEmail: '',\n      companyPhone: '',\n      companyPhonePrefix: '+971',\n      emirates: '0',\n      buildingNumber: '',\n      street: '',\n      address: '',\n      profileImagefile: null,\n      tradeLicenseFile: [],\n      uploadLicense: [],\n      formOpen: true,\n      customerID: '',\n    }\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n\n    // profile image button\n    $(\".profileUploader\").on(\"click\", function() {\n      $(\".profile-upload-button\").trigger('click');\n    });\n\n    // trade licesnse button\n    $(\".tradeLicenseUploader\").click(function(){\n      $(\"#trade-license-files\").trigger('click');\n    });\n\n    const ids = this.props.match.params.id;\n    this.setState({\n      customerID: ids,\n    })\n    const id = ids;\n    this.props.loadCustomerbyID({id});\n  }\n\n  componentDidUpdate(prevProps) {\n    const { \n      updateSuccess,\n      updateError,\n      customer,\n    } = this.props;\n    const { \n      updateSuccess: prevupdateSuccess,\n      updateError: prevupdateError,\n      customer: prevcustomer\n    } = prevProps;\n\n      if(customer != prevcustomer && customer === null) {\n        NotificationManager.error(\"Customer doesn't exist\");\n        this.setState({formOpen: false})\n      }\n      if(customer && customer != prevcustomer) {\n        this.setState({\n            companyName: customer.CompanyName,\n            contactPersonFirstname: customer.ContactpersonFirstname,\n            contactPersonLastname: customer.ContactpersonLastname,\n            contactPersonMobile: customer.ContactpersonMobile,\n            contactPersonMobilePrefix: '+971',\n            contactPersonEmail: customer.ContactpersonEmail,\n            companyPhone: customer.CompanyPhone,\n            companyPhonePrefix: '+971',\n            emirates: customer.Emirates,\n            buildingNumber: customer.BuildingNO,\n            street: customer.Street,\n            address: customer.Address,\n        })\n      }\n\n    // update success\n    if(updateSuccess && updateSuccess !== prevupdateSuccess) {\n      NotificationManager.success(\"Customer updated successfully\");\n    }\n\n    // update error\n    if(updateError && updateError !== prevupdateError) {\n      NotificationManager.error(updateError);\n    }\n    \n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  \n  // reset\n  handleReset = (resetForm) => {\n    if (window.confirm('Reset?')) {\n      resetForm();\n    }\n  };\n\n  onSubmit = async (e)  => {\n    e.preventDefault();\n    const customerData = this.state;\n    var pattern = new RegExp(/^[0-9\\b]+$/);\n\n    // Company Name\n    if(customerData.companyName === \"\") {\n      NotificationManager.warning(\"Company name is required\");\n      return false;\n    }\n\n    // Mobile Number\n    if (customerData.contactPersonMobile === \"\") {\n      NotificationManager.warning(\"Mobile number is required!\");\n      return false;\n    }else if(!pattern.test(customerData.contactPersonMobile)) {\n      NotificationManager.warning(\"Please enter only number.\");\n      return false;\n    }else if(customerData.contactPersonMobile.length !== 9) {\n      NotificationManager.warning(\"Please enter valid phone number.\");\n      return false;\n    }\n\n    // Contact Email\n    if(!validator.isEmail(customerData.contactPersonEmail)) {\n      NotificationManager.warning(\"Enter valid email\");\n      return false;\n    }\n    this.props.updateCustomer( customerData );\n  }\n\n  render() {\n    const { profileImagefile, tradeLicenseFile, formOpen, uploadLicense } = this.state;\n    return (\n      <CRow>\n        <NotificationContainer/>\n        <CCol xs=\"12\" md=\"8\" className=\"offset-2\">\n          <CCard>\n            <CCardBody>\n              {\n                formOpen ?\n                  <CForm className=\"form-horizontal\" onSubmit={this.onSubmit}>\n                    <CFormGroup row>\n                      <CCol md=\"4\">\n                          <CLabel htmlFor=\"hf-email\">Company Name</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"8\">\n                          <CInput \n                            type=\"text\" \n                            id=\"companyName\" \n                            name=\"companyName\"\n                            value={this.state.companyName}\n                            placeholder=\"Name of your company\"\n                            onChange={this.onChange}\n                          />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"4\">\n                          <CLabel htmlFor=\"hf-password\">Contact person First Name</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"8\">\n                          <CInput \n                            type=\"text\" \n                            id=\"contactPersonFirstname\" \n                            name=\"contactPersonFirstname\"\n                            value={this.state.contactPersonFirstname}\n                            placeholder=\"First name of contact person\"\n                            onChange={this.onChange}\n                          />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"4\">\n                          <CLabel htmlFor=\"hf-password\">Contact person Last Name</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"8\">\n                          <CInput \n                            type=\"text\" \n                            id=\"contactPersonLastname\" \n                            name=\"contactPersonLastname\"\n                            value={this.state.contactPersonLastname}\n                            placeholder=\"Last name of contact person\"\n                            onChange={this.onChange}\n                          />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"4\">\n                          <CLabel htmlFor=\"hf-password\">Contact person Mobile</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"2\">\n                          <CInput \n                            type=\"tel\" \n                            id=\"contactPersonMobilePrefix\" \n                            name=\"contactPersonMobilePrefix\"\n                            value={this.state.contactPersonMobilePrefix}\n                            readOnly=\"readOnly\"\n                          />\n                      </CCol>\n                      <CCol xs=\"12\" md=\"6\">\n                          <CInput \n                            type=\"tel\" \n                            id=\"contactPersonMobile\" \n                            name=\"contactPersonMobile\"\n                            value={this.state.contactPersonMobile}\n                            placeholder=\"55 555 5555\"\n                            onChange={this.onChange}\n                          />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"4\">\n                          <CLabel htmlFor=\"hf-password\">Contact person Email</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"8\">\n                          <CInput \n                            type=\"text\" \n                            id=\"contactPersonEmail\" \n                            name=\"contactPersonEmail\"\n                            value={this.state.contactPersonEmail}\n                            placeholder=\"Email ID of contact person\"\n                            onChange={this.onChange}\n                          />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"4\">\n                          <CLabel htmlFor=\"hf-password\">Company Phone</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"2\">\n                          <CInput \n                            type=\"tel\" \n                            id=\"companyPhonePrefix\" \n                            name=\"companyPhonePrefix\"\n                            value={this.state.companyPhonePrefix}\n                            readOnly=\"readOnly\"\n                          />\n                      </CCol>\n                      <CCol xs=\"12\" md=\"6\">\n                          <CInput \n                            type=\"tel\" \n                            id=\"companyPhone\" \n                            name=\"companyPhone\"\n                            value={this.state.companyPhone}\n                            placeholder=\"66 666 6666\"\n                            onChange={this.onChange}\n                          />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"4\">\n                          <CLabel htmlFor=\"hf-password\">Emirates</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"8\">\n                          <CSelect name=\"emirates\" id=\"emirates\" value={this.state.emirates} placeholder=\"Emirates\" onChange={this.onChange} >\n                            <option value=\"0\">Please select</option>\n                            <option value=\"1\">Abu Dhabi</option>\n                            <option value=\"2\">Dubai</option>\n                            <option value=\"3\">Sharjah</option>\n                            <option value=\"4\">Ajman</option>\n                            <option value=\"5\">Umm Al-Quwain</option>\n                            <option value=\"6\">Fujairah</option>\n                          </CSelect>\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"4\">\n                          <CLabel htmlFor=\"hf-password\">Building Number</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"8\">\n                          <CInput \n                            type=\"text\" \n                            id=\"buildingNumber\" \n                            name=\"buildingNumber\"\n                            value={this.state.buildingNumber}\n                            placeholder=\"Building Number\"\n                            onChange={this.onChange}\n                          />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"4\">\n                          <CLabel htmlFor=\"hf-password\">Street</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"8\">\n                          <CInput \n                            type=\"text\" \n                            id=\"street\" \n                            name=\"street\"\n                            value={this.state.street}\n                            placeholder=\"Street Name\"\n                            onChange={this.onChange}\n                          />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"4\">\n                          <CLabel htmlFor=\"hf-password\">Address</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"8\">\n                          <CInput \n                            type=\"text\" \n                            id=\"address\" \n                            name=\"address\"\n                            value={this.state.address}\n                            placeholder=\"Address\"\n                            onChange={this.onChange}\n                          />\n                      </CCol>\n                    </CFormGroup>\n                    \n                    <CFormGroup row>\n                        <CCol xs=\"12\" md=\"12\" className=\"text-center\">\n                          <CButton className=\"customer-create-button\" type=\"submit\" color=\"primary\"><CIcon name=\"cil-save\" /> Update Customer</CButton>\n                        </CCol>\n                    </CFormGroup>\n                  </CForm>\n                  :\n                  <div className=\"text-center\">Sorry! customer does not exist.</div>\n              }\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    )\n  }\n}\n\nEditCustomer.propTypes = {\n  customerErrors: PropTypes.object.isRequired,\n  customer: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  customerErrors: state.customerErrors,\n  customer: state.customer.editCustomer,\n  updateSuccess: state.customer.updateSuccess,\n  updateError: state.customer.updateError\n});\nexport default connect(\n  mapStateToProps,\n  { loadCustomerbyID, updateCustomer }\n)(EditCustomer);\n",{"ruleId":"430","replacedBy":"431"},{"ruleId":"432","replacedBy":"433"},{"ruleId":"434","severity":1,"message":"435","line":2,"column":7,"nodeType":"436","messageId":"437","endLine":2,"endColumn":14},{"ruleId":"438","severity":1,"message":"439","line":104,"column":9,"nodeType":"440","messageId":"441","endLine":108,"endColumn":14},{"ruleId":"438","severity":1,"message":"439","line":274,"column":9,"nodeType":"440","messageId":"441","endLine":277,"endColumn":14},{"ruleId":"434","severity":1,"message":"442","line":6,"column":5,"nodeType":"436","messageId":"437","endLine":6,"endColumn":14},{"ruleId":"434","severity":1,"message":"443","line":53,"column":17,"nodeType":"436","messageId":"437","endLine":53,"endColumn":20},{"ruleId":"434","severity":1,"message":"444","line":9,"column":31,"nodeType":"436","messageId":"437","endLine":9,"endColumn":35},{"ruleId":"445","severity":1,"message":"446","line":64,"column":50,"nodeType":"447","messageId":"448","endLine":64,"endColumn":52},{"ruleId":"434","severity":1,"message":"449","line":11,"column":3,"nodeType":"436","messageId":"437","endLine":11,"endColumn":9},{"ruleId":"434","severity":1,"message":"450","line":19,"column":5,"nodeType":"436","messageId":"437","endLine":19,"endColumn":16},{"ruleId":"434","severity":1,"message":"451","line":3,"column":3,"nodeType":"436","messageId":"437","endLine":3,"endColumn":10},{"ruleId":"434","severity":1,"message":"452","line":19,"column":8,"nodeType":"436","messageId":"437","endLine":19,"endColumn":13},{"ruleId":"434","severity":1,"message":"453","line":52,"column":38,"nodeType":"436","messageId":"437","endLine":52,"endColumn":45},{"ruleId":"434","severity":1,"message":"453","line":152,"column":50,"nodeType":"436","messageId":"437","endLine":152,"endColumn":57},{"ruleId":"434","severity":1,"message":"454","line":18,"column":5,"nodeType":"436","messageId":"437","endLine":18,"endColumn":14},{"ruleId":"434","severity":1,"message":"450","line":19,"column":5,"nodeType":"436","messageId":"437","endLine":19,"endColumn":16},{"ruleId":"445","severity":1,"message":"446","line":37,"column":37,"nodeType":"447","messageId":"448","endLine":37,"endColumn":39},{"ruleId":"434","severity":1,"message":"455","line":79,"column":37,"nodeType":"436","messageId":"437","endLine":79,"endColumn":48},{"ruleId":"434","severity":1,"message":"456","line":22,"column":10,"nodeType":"436","messageId":"437","endLine":22,"endColumn":14},{"ruleId":"434","severity":1,"message":"457","line":51,"column":44,"nodeType":"436","messageId":"437","endLine":51,"endColumn":48},{"ruleId":"458","severity":1,"message":"459","line":81,"column":9,"nodeType":"436","messageId":"460","endLine":81,"endColumn":18},{"ruleId":"434","severity":1,"message":"453","line":157,"column":55,"nodeType":"436","messageId":"437","endLine":157,"endColumn":62},{"ruleId":"461","severity":1,"message":"462","line":39,"column":29,"nodeType":"463","endLine":39,"endColumn":95},{"ruleId":"464","severity":1,"message":"465","line":108,"column":21,"nodeType":"466","messageId":"467","endLine":132,"endColumn":22},{"ruleId":"468","severity":1,"message":"469","line":25,"column":8,"nodeType":"470","endLine":25,"endColumn":10,"suggestions":"471"},{"ruleId":"434","severity":1,"message":"451","line":3,"column":10,"nodeType":"436","messageId":"437","endLine":3,"endColumn":17},{"ruleId":"434","severity":1,"message":"472","line":13,"column":3,"nodeType":"436","messageId":"437","endLine":13,"endColumn":13},{"ruleId":"434","severity":1,"message":"473","line":21,"column":8,"nodeType":"436","messageId":"437","endLine":21,"endColumn":17},{"ruleId":"474","severity":1,"message":"475","line":85,"column":19,"nodeType":"476","messageId":"441","endLine":85,"endColumn":21},{"ruleId":"474","severity":1,"message":"475","line":89,"column":31,"nodeType":"476","messageId":"441","endLine":89,"endColumn":33},{"ruleId":"434","severity":1,"message":"477","line":161,"column":13,"nodeType":"436","messageId":"437","endLine":161,"endColumn":29},{"ruleId":"434","severity":1,"message":"478","line":161,"column":31,"nodeType":"436","messageId":"437","endLine":161,"endColumn":47},{"ruleId":"434","severity":1,"message":"479","line":161,"column":59,"nodeType":"436","messageId":"437","endLine":161,"endColumn":72},"no-native-reassign",["480"],"no-negated-in-lhs",["481"],"no-unused-vars","'isEmpty' is assigned a value but never used.","Identifier","unusedVar","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'fetchCars' is defined but never used.","'car' is assigned a value but never used.","'take' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'CAlert' is defined but never used.","'Manufacture' is assigned a value but never used.","'CButton' is defined but never used.","'CIcon' is defined but never used.","'enquiry' is assigned a value but never used.","'EnquiryID' is assigned a value but never used.","'enquiryList' is assigned a value but never used.","'Link' is defined but never used.","'data' is assigned a value but never used.","no-redeclare","'enquiryID' is already defined.","redeclared","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'partDetails' and 'props.partPrice'. Either include them or remove the dependency array.","ArrayExpression",["482"],"'CInputFile' is defined but never used.","'configApi' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'profileImagefile' is assigned a value but never used.","'tradeLicenseFile' is assigned a value but never used.","'uploadLicense' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"483","fix":"484"},"Update the dependencies array to be: [partDetails, props.partPrice]",{"range":"485","text":"486"},[871,873],"[partDetails, props.partPrice]"]