{"ast":null,"code":"import _objectSpread from \"/Users/irfan/projects/local/trunk-user-interface-stand-alone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as Actions from './constants';\nvar initialState = {\n  loading: false,\n  manufactures: [],\n  errorData: '',\n  successData: false,\n  pager: {},\n  data: []\n};\nexport default function manufactureReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    /**\n     * add manufacture\n     */\n    case Actions.ADD_MANUFACTURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        errorData: '',\n        successData: false\n      });\n\n    case Actions.ADD_MANUFACTURE_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pager: state.manufactures.concat(action.pager),\n        loading: false,\n        errorData: '',\n        successData: true\n      });\n\n    case Actions.ADD_MANUFACTURE_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorData: action.payload,\n        loading: false,\n        successData: false\n      });\n\n    /**\n     * load manufacture\n     */\n\n    case Actions.LOAD_MANUFACTURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case Actions.LOAD_MANUFACTURE_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        manufactures: action.payload,\n        loading: false,\n        pager: action.pager\n      });\n\n    case Actions.LOAD_MANUFACTURE_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorData: action.error,\n        loading: false\n      });\n\n    /**\n     * delete manufacture\n     */\n\n    case Actions.DELETE_MANUFACTURE_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pager: state.manufactures.filter(function (item) {\n          return item.ID !== action.payload;\n        }),\n        //manufactures: state.manufactures.filter(item => item.ID !== action.payload),\n        successData: false\n      });\n\n    case Actions.DELETE_MANUFACTURE_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        successData: false,\n        deleteErrorData: action.error,\n        errorData: ''\n      });\n\n    /**\n     * update manufacture\n     */\n\n    case Actions.UPDATE_MANUFACTURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case Actions.UPDATE_MANUFACTURE_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        manufactures: state.manufactures.map(function (items, index) {\n          return items.ID === action.payload[0].ID ? _objectSpread(_objectSpread({}, items), {}, {\n            Name: action.payload[0].Name\n          }) : items;\n        }),\n        loading: false\n      });\n\n    case Actions.UPDATE_MANUFACTURE_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorData: action.error,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/manufacture/reducer.js"],"names":["Actions","initialState","loading","manufactures","errorData","successData","pager","data","manufactureReducer","state","action","type","ADD_MANUFACTURE","ADD_MANUFACTURE_SUCCESS","concat","ADD_MANUFACTURE_ERROR","payload","LOAD_MANUFACTURE","LOAD_MANUFACTURE_SUCCESS","LOAD_MANUFACTURE_ERROR","error","DELETE_MANUFACTURE_SUCCESS","filter","item","ID","DELETE_MANUFACTURE_ERROR","deleteErrorData","UPDATE_MANUFACTURE","UPDATE_MANUFACTURE_SUCCESS","map","items","index","Name","UPDATE_MANUFACTURE_ERROR"],"mappings":"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","sourcesContent":["import * as Actions from './constants';\nconst initialState = {\n    loading: false,\n    manufactures: [],\n    errorData:'',\n    successData: false,\n    pager: {},\n    data: []\n}\n\nexport default function manufactureReducer(state = initialState, action) {\n    switch (action.type) {\n        /**\n         * add manufacture\n         */\n        case Actions.ADD_MANUFACTURE:\n            return {\n                ...state,\n                loading: true,\n                errorData: '',\n                successData: false,\n            };\n        case Actions.ADD_MANUFACTURE_SUCCESS:\n            return {\n                ...state,\n                pager: state.manufactures.concat(action.pager),\n                loading: false,\n                errorData: '',\n                successData: true\n            };\n        case Actions.ADD_MANUFACTURE_ERROR:\n            return {\n                ...state,\n                errorData: action.payload,\n                loading: false,\n                successData: false,\n            };\n        /**\n         * load manufacture\n         */\n        case Actions.LOAD_MANUFACTURE:\n            return {\n                ...state,\n                loading: true,\n            };\n        case Actions.LOAD_MANUFACTURE_SUCCESS:\n            return {\n                ...state,\n                manufactures: action.payload,\n                loading: false,\n                pager: action.pager\n            };\n        case Actions.LOAD_MANUFACTURE_ERROR:\n            return {\n                ...state,\n                errorData: action.error,\n                loading: false,\n            };\n        /**\n         * delete manufacture\n         */\n        case Actions.DELETE_MANUFACTURE_SUCCESS:\n            return {\n                ...state,\n                pager: state.manufactures.filter(item => item.ID !== action.payload),\n                //manufactures: state.manufactures.filter(item => item.ID !== action.payload),\n                successData: false\n            }\n        case Actions.DELETE_MANUFACTURE_ERROR:\n            return {\n                ...state,\n                successData: false,\n                deleteErrorData: action.error,\n                errorData: '',\n            }\n        /**\n         * update manufacture\n         */\n         case Actions.UPDATE_MANUFACTURE:\n            return {\n                ...state,\n                loading: true,\n            };\n        case Actions.UPDATE_MANUFACTURE_SUCCESS:\n            return {\n                ...state,\n                manufactures: state.manufactures.map(    \n                    (items, index) => \n                        items.ID === action.payload[0].ID ? \n                            {...items, Name : action.payload[0].Name }    \n                                : items\n                    ),\n                loading: false,\n            };\n        case Actions.UPDATE_MANUFACTURE_ERROR:\n            return {\n                ...state,\n                errorData: action.error,\n                loading: false,\n            };\n        default: \n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}