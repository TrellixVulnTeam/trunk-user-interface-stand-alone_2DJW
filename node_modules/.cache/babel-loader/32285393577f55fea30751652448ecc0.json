{"ast":null,"code":"import _regeneratorRuntime from \"/Users/irfan/projects/local/trunk-user-interface-stand-alone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(createCustomerSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadCustomerSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadCustomerbyIDSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(deleteCustomerSaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(updateCustomerSaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(customerSaga);\n\nimport * as Actions from './constants';\nimport { createCustomer, loadCustomer, loadCustomerByID, deleteCustomer, updateCustomer } from './service';\n\nvar _require = require(\"@redux-saga/core/effects\"),\n    put = _require.put,\n    call = _require.call,\n    takeEvery = _require.takeEvery,\n    take = _require.take;\n/**\n * Create Customer saga\n */\n\n\nfunction createCustomerSaga(_ref) {\n  var formData, _yield$call, data;\n\n  return _regeneratorRuntime.wrap(function createCustomerSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          formData = _ref.formData;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(createCustomer, formData);\n\n        case 4:\n          _yield$call = _context.sent;\n          data = _yield$call.data;\n          _context.next = 8;\n          return put({\n            type: Actions.CREATE_CUSTOMER_SUCCESS,\n            payload: data\n          });\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 14;\n          return put({\n            type: Actions.CREATE_CUSTOMER_ERROR,\n            error: _context.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10]]);\n}\n/**\n * Load customer\n */\n\n\nfunction loadCustomerSaga(_ref2) {\n  var query, _yield$call2, data, pager;\n\n  return _regeneratorRuntime.wrap(function loadCustomerSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          query = _ref2.query;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(loadCustomer, {\n            query: query\n          });\n\n        case 4:\n          _yield$call2 = _context2.sent;\n          data = _yield$call2.data;\n          pager = _yield$call2.pager;\n          _context2.next = 9;\n          return put({\n            type: Actions.LOAD_CUSTOMER_SUCCESS,\n            payload: data,\n            pager: pager\n          });\n\n        case 9:\n          _context2.next = 15;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 15;\n          return put({\n            type: Actions.LOAD_CUSTOMER_ERROR,\n            error: _context2.t0\n          });\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 11]]);\n}\n/**\n * Load customer by id\n */\n\n\nfunction loadCustomerbyIDSaga(_ref3) {\n  var id, _yield$call3, data;\n\n  return _regeneratorRuntime.wrap(function loadCustomerbyIDSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          id = _ref3.id;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(loadCustomerByID, {\n            id: id\n          });\n\n        case 4:\n          _yield$call3 = _context3.sent;\n          data = _yield$call3.data;\n          _context3.next = 8;\n          return put({\n            type: Actions.LOAD_CUSTOMER_BY_ID_SUCCESS,\n            payload: data\n          });\n\n        case 8:\n          _context3.next = 14;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 14;\n          return put({\n            type: Actions.LOAD_CUSTOMER_BY_ID_ERROR,\n            error: _context3.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 10]]);\n}\n/**\n *  DELETE CUSTOMER\n */\n\n\nfunction deleteCustomerSaga(_ref4) {\n  var id, _yield$call4, data;\n\n  return _regeneratorRuntime.wrap(function deleteCustomerSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          id = _ref4.id;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(deleteCustomer, {\n            id: id\n          });\n\n        case 4:\n          _yield$call4 = _context4.sent;\n          data = _yield$call4.data;\n          _context4.next = 8;\n          return put({\n            type: Actions.DELETE_CUSTOMER_SUCCESS,\n            payload: data\n          });\n\n        case 8:\n          _context4.next = 14;\n          break;\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](1);\n          _context4.next = 14;\n          return put({\n            type: Actions.DELETE_CUSTOMER_ERROR,\n            error: \"Can't delete this record!\"\n          });\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[1, 10]]);\n}\n/**\n *  UPDATE CUSTOMER\n */\n\n\nfunction updateCustomerSaga(_ref5) {\n  var formData, _yield$call5, data;\n\n  return _regeneratorRuntime.wrap(function updateCustomerSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          formData = _ref5.formData;\n          _context5.prev = 1;\n          _context5.next = 4;\n          return call(updateCustomer, formData);\n\n        case 4:\n          _yield$call5 = _context5.sent;\n          data = _yield$call5.data;\n          _context5.next = 8;\n          return put({\n            type: Actions.UPDATE_CUSTOMER_SUCCESS,\n            payload: data\n          });\n\n        case 8:\n          _context5.next = 14;\n          break;\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](1);\n          _context5.next = 14;\n          return put({\n            type: Actions.UPDA,\n            error: _context5.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[1, 10]]);\n}\n\nexport default function customerSaga() {\n  return _regeneratorRuntime.wrap(function customerSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(Actions.CREATE_CUSTOMER, createCustomerSaga);\n\n        case 2:\n          _context6.next = 4;\n          return takeEvery(Actions.LOAD_CUSTOMER, loadCustomerSaga);\n\n        case 4:\n          _context6.next = 6;\n          return takeEvery(Actions.DELETE_CUSTOMER, deleteCustomerSaga);\n\n        case 6:\n          _context6.next = 8;\n          return takeEvery(Actions.LOAD_CUSTOMER_BY_ID, loadCustomerbyIDSaga);\n\n        case 8:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}","map":{"version":3,"sources":["/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/customer/saga.js"],"names":["createCustomerSaga","loadCustomerSaga","loadCustomerbyIDSaga","deleteCustomerSaga","updateCustomerSaga","customerSaga","Actions","createCustomer","loadCustomer","loadCustomerByID","deleteCustomer","updateCustomer","require","put","call","takeEvery","take","formData","data","type","CREATE_CUSTOMER_SUCCESS","payload","CREATE_CUSTOMER_ERROR","error","query","pager","LOAD_CUSTOMER_SUCCESS","LOAD_CUSTOMER_ERROR","id","LOAD_CUSTOMER_BY_ID_SUCCESS","LOAD_CUSTOMER_BY_ID_ERROR","DELETE_CUSTOMER_SUCCESS","DELETE_CUSTOMER_ERROR","UPDATE_CUSTOMER_SUCCESS","UPDA","CREATE_CUSTOMER","LOAD_CUSTOMER","DELETE_CUSTOMER","LOAD_CUSTOMER_BY_ID"],"mappings":"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","sourcesContent":["import * as Actions from './constants';\nimport { \n    createCustomer, \n    loadCustomer,\n    loadCustomerByID,\n    deleteCustomer,\n    updateCustomer\n } from './service';\nconst { put, call, takeEvery, take } = require(\"@redux-saga/core/effects\");\n/**\n * Create Customer saga\n */\nfunction* createCustomerSaga({ formData }) {\n    try {\n        const {data} = yield call(createCustomer, formData);\n        yield put({\n            type: Actions.CREATE_CUSTOMER_SUCCESS,\n            payload: data,\n        });\n\n    } catch (error) {\n        yield put({\n            type: Actions.CREATE_CUSTOMER_ERROR,\n            error: error,\n        });\n    }\n}\n\n\n/**\n * Load customer\n */\nfunction* loadCustomerSaga({ query }) {\n    try {\n        const { data, pager } = yield call(loadCustomer, { query });\n        yield put({\n            type: Actions.LOAD_CUSTOMER_SUCCESS,\n            payload: data,\n            pager: pager\n        });\n    } catch (error) {\n        yield put({\n            type: Actions.LOAD_CUSTOMER_ERROR,\n            error: error,\n        });\n    }\n}\n\n/**\n * Load customer by id\n */\n function* loadCustomerbyIDSaga({ id }) {\n    try {\n        const { data } = yield call(loadCustomerByID, { id });\n        yield put({\n            type: Actions.LOAD_CUSTOMER_BY_ID_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        yield put({\n            type: Actions.LOAD_CUSTOMER_BY_ID_ERROR,\n            error: error,\n        });\n    }\n}\n\n/**\n *  DELETE CUSTOMER\n */\n\n function* deleteCustomerSaga({id}) {\n    try {\n        const { data } = yield call(deleteCustomer, {id});\n        yield put({\n            type: Actions.DELETE_CUSTOMER_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        yield put({\n            type: Actions.DELETE_CUSTOMER_ERROR,\n            error: \"Can't delete this record!\",\n        });\n    }\n}\n\n/**\n *  UPDATE CUSTOMER\n */\n\n function* updateCustomerSaga({ formData }) {\n    try {\n        const {data} = yield call(updateCustomer, formData);\n        yield put({\n            type: Actions.UPDATE_CUSTOMER_SUCCESS,\n            payload: data,\n        });\n\n    } catch (error) {\n        yield put({\n            type: Actions.UPDA,\n            error: error,\n        });\n    }\n}\n\nexport default function* customerSaga() {\n    yield takeEvery(Actions.CREATE_CUSTOMER, createCustomerSaga);\n    yield takeEvery(Actions.LOAD_CUSTOMER, loadCustomerSaga);\n    yield takeEvery(Actions.DELETE_CUSTOMER, deleteCustomerSaga);\n    yield takeEvery(Actions.LOAD_CUSTOMER_BY_ID, loadCustomerbyIDSaga);\n}\n"]},"metadata":{},"sourceType":"module"}