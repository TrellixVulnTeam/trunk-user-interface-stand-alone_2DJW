{"ast":null,"code":"import _objectSpread from \"/Users/irfan/projects/local/trunk-user-interface-stand-alone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as Actions from './constants';\n\nvar isEmpty = require(\"is-empty\");\n\nvar initialState = {\n  loading: false,\n  success: {},\n  response: {},\n  customers: [],\n  editCustomer: '',\n  pager: {},\n  updateResponse: {}\n};\nexport default function customerReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Actions.CREATE_CUSTOMER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        response: !isEmpty(action.payload)\n      });\n\n    case Actions.CREATE_CUSTOMER_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        response: !isEmpty(action.payload),\n        loading: false\n      });\n\n    /**\n     * update customer\n     */\n\n    case Actions.UPDATE_CUSTOMER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        updateResponse: !isEmpty(action.payload)\n      });\n\n    case Actions.UPDATE_CUSTOMER_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        updateResponse: !isEmpty(action.payload),\n        loading: false\n      });\n\n    case Actions.LOAD_CUSTOMER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case Actions.LOAD_CUSTOMER_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        customers: action.payload,\n        error: '',\n        pager: action.pager\n      });\n\n    case Actions.LOAD_CUSTOMER_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.error\n      });\n\n    /**\n     * LOAD CUSTOMER BY ID\n     */\n\n    case Actions.LOAD_CUSTOMER_BY_ID:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case Actions.LOAD_CUSTOMER_BY_ID_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        editCustomer: action.payload,\n        error: ''\n      });\n\n    case Actions.LOAD_CUSTOMER_BY_ID_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.error\n      });\n\n    /**\n     * delete customer\n     */\n\n    case Actions.DELETE_CUSTOMER_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pager: state.customers.filter(function (item) {\n          return item.ID !== action.payload;\n        }),\n        successData: false\n      });\n\n    case Actions.DELETE_CUSTOMER_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        successData: false,\n        deleteErrorData: action.error,\n        errorData: ''\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/customer/reducer.js"],"names":["Actions","isEmpty","require","initialState","loading","success","response","customers","editCustomer","pager","updateResponse","customerReducer","state","action","type","CREATE_CUSTOMER","payload","CREATE_CUSTOMER_SUCCESS","UPDATE_CUSTOMER","UPDATE_CUSTOMER_SUCCESS","LOAD_CUSTOMER","LOAD_CUSTOMER_SUCCESS","error","LOAD_CUSTOMER_ERROR","LOAD_CUSTOMER_BY_ID","LOAD_CUSTOMER_BY_ID_SUCCESS","LOAD_CUSTOMER_BY_ID_ERROR","DELETE_CUSTOMER_SUCCESS","filter","item","ID","successData","DELETE_CUSTOMER_ERROR","deleteErrorData","errorData"],"mappings":"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","sourcesContent":["import * as Actions from './constants';\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n    loading: false,\n    success: {},\n    response: {},\n    customers: [],\n    editCustomer: '',\n    pager: {},\n    updateResponse: {}\n}\n\nexport default function customerReducer(state = initialState, action) {\n    switch (action.type) {\n        case Actions.CREATE_CUSTOMER:\n            return {\n                ...state,\n                loading: true,\n                response: !isEmpty(action.payload)\n            };\n        case Actions.CREATE_CUSTOMER_SUCCESS:\n            return {\n                ...state,\n                response: !isEmpty(action.payload),\n                loading: false\n            };\n        /**\n         * update customer\n         */\n        case Actions.UPDATE_CUSTOMER:\n            return {\n                ...state,\n                loading: true,\n                updateResponse: !isEmpty(action.payload)\n            };\n        case Actions.UPDATE_CUSTOMER_SUCCESS:\n            return {\n                ...state,\n                updateResponse: !isEmpty(action.payload),\n                loading: false\n            };\n        case Actions.LOAD_CUSTOMER:\n            return {\n                ...state,\n                loading: true,\n            };\n        case Actions.LOAD_CUSTOMER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                customers: action.payload,\n                error: '',\n                pager: action.pager\n            }\n        case Actions.LOAD_CUSTOMER_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.error\n            }\n        /**\n         * LOAD CUSTOMER BY ID\n         */\n         case Actions.LOAD_CUSTOMER_BY_ID:\n            return {\n                ...state,\n                loading: true,\n            };\n        case Actions.LOAD_CUSTOMER_BY_ID_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                editCustomer: action.payload,\n                error: ''\n            }\n        case Actions.LOAD_CUSTOMER_BY_ID_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.error\n            }\n        /**\n         * delete customer\n         */\n        case Actions.DELETE_CUSTOMER_SUCCESS:\n            return {\n                ...state,\n                pager: state.customers.filter(item => item.ID !== action.payload),\n                successData: false\n            }\n        case Actions.DELETE_CUSTOMER_ERROR:\n            return {\n                ...state,\n                successData: false,\n                deleteErrorData: action.error,\n                errorData: '',\n            }\n        default: \n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}