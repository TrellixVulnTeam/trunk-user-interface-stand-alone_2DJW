{"ast":null,"code":"import axios from 'axios';\nimport configApi from '../config/api';\n/**\n * Get method\n * @param url\n * @returns {Promise<R>}\n */\n\nvar get = function get(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    //let baseUrl = url.includes(\"https://car-insurance.salama.ae\") ? url + data.chassisNumber : url\n    var baseUrl = url.includes(\"https://car-insurance.salama.ae\") ? url + data.chassisNumber : configApi.API_ENDPOINT + url;\n    var headers = {\n      'Content-Type': \"application/json\"\n    };\n    axios.get(baseUrl, data, headers).then(function (res) {\n      if (res.data.success) {\n        resolve(res.data);\n      } else if (res.statusText === 'OK') {\n        resolve(res);\n      } else {\n        reject(res.data);\n      }\n    }).catch(function (error) {\n      if (error.response.data) {\n        reject(error.response.data);\n      } else {\n        reject({\n          apiError: 'Not Found'\n        });\n      }\n    });\n  });\n};\n/**\n * Post method\n * @param url\n * @param data\n * @param method\n * @returns {Promise<R>}\n */\n\n\nvar post = function post(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    var baseUrl = configApi.API_ENDPOINT + url; //let baseUrl = url;\n\n    var headers = {\n      'Content-Type': 'application/json'\n    };\n    axios.post(baseUrl, data, headers).then(function (res) {\n      if (res.data.success) {\n        resolve(res.data);\n      } else {\n        reject(res.data);\n      }\n    }).catch(function (error) {\n      reject(error.response.data);\n    });\n  });\n};\n\nvar obj = {\n  get: get,\n  post: post,\n  put: function put(url, data) {\n    return post(url, data, 'PUT');\n  }\n};\nexport default obj;","map":{"version":3,"sources":["/Users/optiologicdeveloper/rnProjects/trunk-ui/src/utils/fetch.js"],"names":["axios","configApi","get","url","data","Promise","resolve","reject","baseUrl","includes","chassisNumber","API_ENDPOINT","headers","then","res","success","statusText","catch","error","response","apiError","post","obj","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,GAAD,EAAoB;AAAA,MAAdC,IAAc,uEAAP,EAAO;AAC5B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACA,QAAIC,OAAO,GAAGL,GAAG,CAACM,QAAJ,CAAa,iCAAb,IAAkDN,GAAG,GAAGC,IAAI,CAACM,aAA7D,GAA6ET,SAAS,CAACU,YAAV,GAAyBR,GAApH;AACA,QAAIS,OAAO,GAAI;AACX;AADW,KAAf;AAGAZ,IAAAA,KAAK,CAACE,GAAN,CAAUM,OAAV,EAAmBJ,IAAnB,EAAyBQ,OAAzB,EACCC,IADD,CACM,UAAAC,GAAG,EAAI;AACT,UAAIA,GAAG,CAACV,IAAJ,CAASW,OAAb,EAAsB;AAClBT,QAAAA,OAAO,CAACQ,GAAG,CAACV,IAAL,CAAP;AACH,OAFD,MAEO,IAAGU,GAAG,CAACE,UAAJ,KAAmB,IAAtB,EAA4B;AAC/BV,QAAAA,OAAO,CAACQ,GAAD,CAAP;AACH,OAFM,MAGF;AACDP,QAAAA,MAAM,CAACO,GAAG,CAACV,IAAL,CAAN;AACH;AACJ,KAVD,EAWCa,KAXD,CAWO,UAACC,KAAD,EAAW;AACd,UAAGA,KAAK,CAACC,QAAN,CAAef,IAAlB,EACA;AACIG,QAAAA,MAAM,CAACW,KAAK,CAACC,QAAN,CAAef,IAAhB,CAAN;AACH,OAHD,MAKA;AACIG,QAAAA,MAAM,CAAC;AAACa,UAAAA,QAAQ,EAAE;AAAX,SAAD,CAAN;AACH;AACJ,KApBD;AAqBH,GA3BM,CAAP;AA4BH,CA7BD;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEC,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAClB,GAAD,EAAoB;AAAA,MAAdC,IAAc,uEAAP,EAAO;AAC9B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAIC,OAAO,GAAGP,SAAS,CAACU,YAAV,GAAuBR,GAArC,CADoC,CAEpC;;AACA,QAAIS,OAAO,GAAI;AACX,sBAAgB;AADL,KAAf;AAGAZ,IAAAA,KAAK,CACJqB,IADD,CACMb,OADN,EACeJ,IADf,EACqBQ,OADrB,EAECC,IAFD,CAEM,UAAAC,GAAG,EAAI;AACT,UAAIA,GAAG,CAACV,IAAJ,CAASW,OAAb,EAAsB;AAClBT,QAAAA,OAAO,CAACQ,GAAG,CAACV,IAAL,CAAP;AACH,OAFD,MAEO;AACHG,QAAAA,MAAM,CAACO,GAAG,CAACV,IAAL,CAAN;AACH;AACJ,KARD,EASCa,KATD,CASO,UAACC,KAAD,EAAW;AACdX,MAAAA,MAAM,CAACW,KAAK,CAACC,QAAN,CAAef,IAAhB,CAAN;AACH,KAXD;AAYH,GAlBM,CAAP;AAmBH,CApBA;;AAsBD,IAAMkB,GAAG,GAAG;AACRpB,EAAAA,GAAG,EAAHA,GADQ;AAERmB,EAAAA,IAAI,EAAJA,IAFQ;AAGRE,EAAAA,GAAG,EAAE,aAACpB,GAAD,EAAMC,IAAN;AAAA,WAAeiB,IAAI,CAAClB,GAAD,EAAMC,IAAN,EAAY,KAAZ,CAAnB;AAAA;AAHG,CAAZ;AAMA,eAAekB,GAAf","sourcesContent":["import axios from 'axios';\nimport configApi from '../config/api';\n/**\n * Get method\n * @param url\n * @returns {Promise<R>}\n */\n\nconst get = (url, data = {}) => {\n    return new Promise((resolve, reject) => {\n        //let baseUrl = url.includes(\"https://car-insurance.salama.ae\") ? url + data.chassisNumber : url\n        let baseUrl = url.includes(\"https://car-insurance.salama.ae\") ? url + data.chassisNumber : configApi.API_ENDPOINT + url\n        let headers =  {\n            'Content-Type': `application/json`,\n        }\n        axios.get(baseUrl, data, headers)\n        .then(res => {\n            if (res.data.success) {\n                resolve(res.data);\n            } else if(res.statusText === 'OK') {\n                resolve(res);\n            }\n            else {\n                reject(res.data);\n            }\n        })\n        .catch((error) => {\n            if(error.response.data)\n            {\n                reject(error.response.data)\n            }\n            else\n            {\n                reject({apiError: 'Not Found'})\n            }\n        });\n    });\n}\n\n/**\n * Post method\n * @param url\n * @param data\n * @param method\n * @returns {Promise<R>}\n */\n\n const post = (url, data = {}) => {\n    return new Promise((resolve, reject) => {\n        let baseUrl = configApi.API_ENDPOINT+url;\n        //let baseUrl = url;\n        let headers =  {\n            'Content-Type': 'application/json',\n        }\n        axios\n        .post(baseUrl, data, headers)\n        .then(res => {\n            if (res.data.success) {\n                resolve(res.data);\n            } else {\n                reject(res.data);\n            }\n        })\n        .catch((error) => {\n            reject(error.response.data);\n        });\n    });\n}\n\nconst obj = {\n    get,\n    post,\n    put: (url, data) => post(url, data, 'PUT'),\n}\n\nexport default obj;"]},"metadata":{},"sourceType":"module"}