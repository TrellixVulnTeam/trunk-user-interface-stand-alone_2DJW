{"ast":null,"code":"import _defineProperty from \"/Users/irfan/projects/local/trunk-user-interface-stand-alone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/irfan/projects/local/trunk-user-interface-stand-alone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/irfan/projects/local/trunk-user-interface-stand-alone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/irfan/projects/local/trunk-user-interface-stand-alone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/irfan/projects/local/trunk-user-interface-stand-alone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/irfan/projects/local/trunk-user-interface-stand-alone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/editenquiryPartHeaders.js\";\nimport React, { Component } from 'react';\nimport { CButton, CCard, CCardBody, CCol, CCollapse, CFade, CRow } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loadParts, updateEnquiryPartHeader } from 'src/modules/enquiry/actions';\nimport 'react-notifications/lib/notifications.css';\nimport EnquiryPartHeaders from './container/editenquiryPartHeaders';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar EnquiryID = '';\nvar Manufacture = '';\n\nvar EditenquiryPartHeader = /*#__PURE__*/function (_Component) {\n  _inherits(EditenquiryPartHeader, _Component);\n\n  var _super = _createSuper(EditenquiryPartHeader);\n\n  function EditenquiryPartHeader(props) {\n    var _this;\n\n    _classCallCheck(this, EditenquiryPartHeader);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (e) {\n      if ([\"partName\", \"quantity\"].includes(e.target.name)) {\n        var enquiryPartHeaders = _toConsumableArray(_this.state.enquiryPartHeaders);\n\n        enquiryPartHeaders[e.target.dataset.id][e.target.name] = e.target.value;\n      } else {\n        _this.setState(_defineProperty({}, e.target.name, e.target.value));\n      }\n\n      _this.setState({\n        changeKey: e.target.id\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      // submit\n      e.preventDefault();\n      var ManufactureEntry = [];\n\n      for (var i = 0; i < _this.state.enquiryPartHeaders.length; i++) {\n        if (_this.state.enquiryPartHeaders[i].partName === '' || _this.state.enquiryPartHeaders[i].quantity === '') {\n          NotificationManager.warning(\"Please Fill up Required Field.\");\n          return false;\n        }\n\n        ManufactureEntry.push(_this.state.enquiryPartHeaders[i].partName);\n      } // check duplicate entry\n\n\n      if (_this.hasDuplicates(ManufactureEntry)) {\n        NotificationManager.warning(\"Duplicate entry not permitted!\");\n        return false;\n      }\n\n      var datas = {\n        formData: _this.state,\n        enquiryID: _this.props.match.params.id\n      };\n      var parts = {};\n      parts.datas = datas;\n\n      _this.props.updateEnquiryPartHeader(parts);\n    };\n\n    _this.addNewRow = function () {\n      _this.setState(function (prevState) {\n        return {\n          enquiryPartHeaders: [].concat(_toConsumableArray(prevState.enquiryPartHeaders), [{\n            index: Math.random(),\n            partName: \"\",\n            quantity: \"\"\n          }])\n        };\n      });\n    };\n\n    _this.state = {\n      collapsed: true,\n      showElements: true,\n      enquiryPartHeaders: [],\n      deletedRecord: [],\n      changeKey: ''\n    };\n    return _this;\n  }\n\n  _createClass(EditenquiryPartHeader, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      var _this$props$data = this.props.data,\n          partHeaders = _this$props$data.partHeaders,\n          updateHeaderSuccess = _this$props$data.updateHeaderSuccess;\n      var _prevProps$data = prevProps.data,\n          prevpartHeaders = _prevProps$data.partHeaders,\n          prevupdateHeaderSuccess = _prevProps$data.updateHeaderSuccess;\n\n      if (partHeaders && partHeaders !== prevpartHeaders) {\n        partHeaders.map(function (item, index) {\n          _this2.setState(function (prevState) {\n            return {\n              enquiryPartHeaders: [].concat(_toConsumableArray(prevState.enquiryPartHeaders), [{\n                index: Math.random(),\n                partName: \"\".concat(item.PartID),\n                quantity: \"\".concat(item.Quantity),\n                headerID: \"\".concat(item.ID)\n              }])\n            };\n          });\n        });\n      }\n\n      if (updateHeaderSuccess && updateHeaderSuccess !== prevupdateHeaderSuccess) {\n        this.props.history.push('/enquiry/enquiry-parts');\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var enquiryID = this.props.match.params.id;\n      this.props.loadParts({\n        enquiryID: enquiryID\n      });\n    }\n  }, {\n    key: \"hasDuplicates\",\n    value: function hasDuplicates(array) {\n      return new Set(array).size !== array.length;\n    }\n  }, {\n    key: \"clickOnDelete\",\n    value: function clickOnDelete(record) {\n      this.setState({\n        enquiryPartHeaders: this.state.enquiryPartHeaders.filter(function (r) {\n          return r !== record;\n        }),\n        deletedRecord: this.state.deletedRecord.concat(record)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var parts = this.props.data.parts;\n      var _this$state = this.state,\n          enquiryPartHeaders = _this$state.enquiryPartHeaders,\n          changeKey = _this$state.changeKey;\n      return /*#__PURE__*/_jsxDEV(CRow, {\n        className: \"text-center justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CCol, {\n          xs: \"12\",\n          sm: \"12\",\n          lg: \"10\",\n          children: /*#__PURE__*/_jsxDEV(CFade, {\n            in: this.state.showElements,\n            unmountOnExit: true,\n            children: /*#__PURE__*/_jsxDEV(CCard, {\n              children: /*#__PURE__*/_jsxDEV(CCollapse, {\n                show: this.state.collapsed,\n                timeout: 1000,\n                children: /*#__PURE__*/_jsxDEV(CCardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"Add Parts & Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: this.handleSubmit,\n                    onChange: this.handleChange,\n                    children: /*#__PURE__*/_jsxDEV(\"table\", {\n                      className: \"table\",\n                      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Add/Select part name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 125,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Quantity\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 126,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Action\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 127,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(EnquiryPartHeaders, {\n                        add: this.addNewRow,\n                        delete: this.clickOnDelete.bind(this),\n                        enquiryPartHeaders: enquiryPartHeaders,\n                        part: parts,\n                        changeKey: changeKey\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 129,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: /*#__PURE__*/_jsxDEV(\"td\", {\n                          colSpan: \"3\",\n                          children: [/*#__PURE__*/_jsxDEV(CButton, {\n                            onClick: function onClick() {\n                              return _this3.props.history.goBack();\n                            },\n                            color: \"secondary\",\n                            className: \"mfe-3\",\n                            to: \"/enquiry\",\n                            children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                              name: \"cil-x\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 138,\n                              columnNumber: 132\n                            }, this), \" Cancel\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 138,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(CButton, {\n                            type: \"submit\",\n                            color: \"primary\",\n                            children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                              name: \"cil-save\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 139,\n                              columnNumber: 69\n                            }, this), \" Update\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 139,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 137,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 136,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return EditenquiryPartHeader;\n}(Component);\n\nEditenquiryPartHeader.propTypes = {\n  enquiry: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.enquiry\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadParts: loadParts,\n  updateEnquiryPartHeader: updateEnquiryPartHeader\n})(EditenquiryPartHeader);","map":{"version":3,"sources":["/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/public/enquiry/editenquiryPartHeaders.js"],"names":["React","Component","CButton","CCard","CCardBody","CCol","CCollapse","CFade","CRow","CIcon","NotificationContainer","NotificationManager","PropTypes","connect","loadParts","updateEnquiryPartHeader","EnquiryPartHeaders","EnquiryID","Manufacture","EditenquiryPartHeader","props","handleChange","e","includes","target","name","enquiryPartHeaders","state","dataset","id","value","setState","changeKey","handleSubmit","preventDefault","ManufactureEntry","i","length","partName","quantity","warning","push","hasDuplicates","datas","formData","enquiryID","match","params","parts","addNewRow","prevState","index","Math","random","collapsed","showElements","deletedRecord","prevProps","data","partHeaders","updateHeaderSuccess","prevpartHeaders","prevupdateHeaderSuccess","map","item","PartID","Quantity","headerID","ID","history","array","Set","size","record","filter","r","concat","clickOnDelete","bind","goBack","propTypes","enquiry","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CCollapse,\n  CFade,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loadParts, updateEnquiryPartHeader} from 'src/modules/enquiry/actions';\nimport 'react-notifications/lib/notifications.css';\nimport EnquiryPartHeaders from './container/editenquiryPartHeaders';\nlet EnquiryID = '';\nlet Manufacture = '';\n\nclass EditenquiryPartHeader extends Component {\nconstructor(props) {\n  super(props);\n  this.state = {\n    collapsed: true,\n    showElements: true,\n    enquiryPartHeaders: [],\n    deletedRecord: [],\n    changeKey: '',\n  }\n}\n\ncomponentDidUpdate(prevProps) {\n    const { partHeaders, updateHeaderSuccess } = this.props.data;\n    const { partHeaders: prevpartHeaders, updateHeaderSuccess: prevupdateHeaderSuccess } = prevProps.data;\n    if(partHeaders && partHeaders !== prevpartHeaders) {\n      partHeaders.map((item, index) => {\n        this.setState((prevState) => ({\n            enquiryPartHeaders: [...prevState.enquiryPartHeaders, { index: Math.random(), partName: `${item.PartID}`, quantity: `${item.Quantity}`, headerID: `${item.ID}` }],\n        }));\n      })\n    }\n\n    if (updateHeaderSuccess && updateHeaderSuccess !== prevupdateHeaderSuccess) {\n      this.props.history.push('/enquiry/enquiry-parts');\n    }\n}\n\ncomponentDidMount() {\n  const enquiryID = this.props.match.params.id;\n  this.props.loadParts({ enquiryID });\n}\n\nhandleChange = (e) => {\n  if ([\"partName\", \"quantity\"].includes(e.target.name)) {\n      let enquiryPartHeaders = [...this.state.enquiryPartHeaders]\n      enquiryPartHeaders[e.target.dataset.id][e.target.name] = e.target.value;\n  } else {\n      this.setState({ [e.target.name]: e.target.value })\n  }\n  this.setState({ changeKey: e.target.id })\n}\n\nhandleSubmit = (e) => {\n  // submit\n  e.preventDefault();\n  let ManufactureEntry = [];\n  for(var i=0;i<this.state.enquiryPartHeaders.length;i++)\n  {\n      if(this.state.enquiryPartHeaders[i].partName==='' || this.state.enquiryPartHeaders[i].quantity==='')\n      {\n          NotificationManager.warning(\"Please Fill up Required Field.\");\n          return false;\n      }\n      ManufactureEntry.push(this.state.enquiryPartHeaders[i].partName);\n  }\n\n  // check duplicate entry\n  if(this.hasDuplicates(ManufactureEntry))\n  {\n      NotificationManager.warning(\"Duplicate entry not permitted!\");\n      return false;\n  }\n  \n  const datas = { formData: this.state, enquiryID: this.props.match.params.id }\n  const parts = {};\n  parts.datas = datas;\n  this.props.updateEnquiryPartHeader(parts);\n}\n\nhasDuplicates(array) {\n  return (new Set(array)).size !== array.length;\n}\n\naddNewRow = () => {\n  this.setState((prevState) => ({\n      enquiryPartHeaders: [...prevState.enquiryPartHeaders, { index: Math.random(), partName: \"\", quantity: \"\" }],\n  }));\n}\n\n\nclickOnDelete(record) {\n  this.setState({\n      enquiryPartHeaders: this.state.enquiryPartHeaders.filter(r => r !== record),\n      deletedRecord: this.state.deletedRecord.concat(record)\n  });\n}\n\n\nrender() {\n  const { parts } = this.props.data;\n  let { enquiryPartHeaders, changeKey } = this.state;\n  return (\n      <CRow className=\"text-center justify-content-center\">\n        <NotificationContainer/>\n        <CCol xs=\"12\" sm=\"12\" lg=\"10\">\n          <CFade in={this.state.showElements} unmountOnExit={true}>\n            <CCard>\n              <CCollapse show={this.state.collapsed} timeout={1000}>\n                <CCardBody>\n                    <h4>Add Parts &#38; Quantity</h4>\n                    <form onSubmit={this.handleSubmit} onChange={this.handleChange}>\n                      <table className=\"table\">\n                        <tr>\n                          <th>Add/Select part name</th>\n                          <th>Quantity</th>\n                          <th>Action</th>\n                        </tr>\n                        <EnquiryPartHeaders \n                          add={this.addNewRow} \n                          delete={this.clickOnDelete.bind(this)} \n                          enquiryPartHeaders={enquiryPartHeaders} \n                          part={parts} \n                          changeKey={changeKey}\n                        />\n                        <tr>\n                          <td colSpan=\"3\">\n                            <CButton onClick={() => this.props.history.goBack()} color=\"secondary\" className=\"mfe-3\" to=\"/enquiry\"><CIcon name=\"cil-x\" /> Cancel</CButton>\n                            <CButton type=\"submit\" color=\"primary\" ><CIcon name=\"cil-save\" /> Update</CButton>\n                          </td>\n                        </tr>\n                      </table>\n                    </form>\n                </CCardBody>\n              </CCollapse>\n            </CCard>\n          </CFade>\n        </CCol>\n      </CRow>\n    )\n  }\n}\n\nEditenquiryPartHeader.propTypes = {\n  enquiry: PropTypes.object.isRequired,\n};\nconst mapStateToProps = state => ({\n  data: state.enquiry\n});\nexport default connect(\nmapStateToProps,\n{ loadParts, updateEnquiryPartHeader }\n)(EditenquiryPartHeader);\n"]},"metadata":{},"sourceType":"module"}