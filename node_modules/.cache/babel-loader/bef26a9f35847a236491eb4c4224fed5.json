{"ast":null,"code":"import _objectSpread from \"/Users/irfan/projects/local/trunk-user-interface-stand-alone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as Actions from './constants';\nvar initialState = {\n  partSections: [],\n  pager: {},\n  createError: null,\n  createSuccess: false,\n  deleteError: null,\n  deleteSuccess: false,\n  updateError: null,\n  updateSuccess: false\n};\nexport default function partSectionReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    /**\n     * add car\n     */\n    case Actions.ADD_PART_SECTION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        createSuccess: false,\n        createError: null\n      });\n\n    case Actions.ADD_PART_SECTION_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pager: state.partSections.concat(action.pager),\n        createSuccess: true,\n        createError: null\n      });\n\n    case Actions.ADD_PART_SECTION_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.payload,\n        createSuccess: false,\n        createError: action.payload\n      });\n\n    /**\n     * load master\n     */\n\n    case Actions.LOAD_PART_SECTION:\n      return _objectSpread({}, state);\n\n    case Actions.LOAD_PART_SECTION_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        partSections: action.payload,\n        pager: action.pager\n      });\n\n    case Actions.LOAD_PART_SECTION_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.payload\n      });\n\n    /**\n     * delete part section\n     */\n\n    case Actions.DELETE_PART_SECTION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        deleteSuccess: false,\n        deleteError: null\n      });\n\n    case Actions.DELETE_PART_SECTION_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        partSections: state.partSections.filter(function (item) {\n          return item.ID !== action.payload;\n        }),\n        deleteSuccess: true,\n        deleteError: null\n      });\n\n    case Actions.DELETE_PART_SECTION_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        deleteSuccess: false,\n        deleteError: action.error\n      });\n\n    /**\n     * update part section\n     */\n\n    case Actions.UPDATE_PART_SECTION:\n      return _objectSpread({}, state);\n\n    case Actions.UPDATE_PART_SECTION_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        partSections: state.partSections.map(function (items, index) {\n          return items.ID === action.payload[0].ID ? _objectSpread(_objectSpread({}, items), {}, {\n            Name: action.payload[0].Name\n          }) : items;\n        })\n      });\n\n    case Actions.UPDATE_PART_SECTION_ERROR:\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/irfan/projects/local/trunk-user-interface-stand-alone/src/modules/masters/partSection/reducer.js"],"names":["Actions","initialState","partSections","pager","createError","createSuccess","deleteError","deleteSuccess","updateError","updateSuccess","partSectionReducer","state","action","type","ADD_PART_SECTION","ADD_PART_SECTION_SUCCESS","concat","ADD_PART_SECTION_ERROR","data","payload","LOAD_PART_SECTION","LOAD_PART_SECTION_SUCCESS","LOAD_PART_SECTION_ERROR","DELETE_PART_SECTION","DELETE_PART_SECTION_SUCCESS","filter","item","ID","DELETE_PART_SECTION_ERROR","error","UPDATE_PART_SECTION","UPDATE_PART_SECTION_SUCCESS","map","items","index","Name","UPDATE_PART_SECTION_ERROR"],"mappings":"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","sourcesContent":["import * as Actions from './constants';\nconst initialState = {\n    partSections: [],\n    pager: {},\n    createError: null,\n    createSuccess: false,\n    deleteError: null,\n    deleteSuccess: false,\n    updateError: null,\n    updateSuccess: false,\n}\n\nexport default function partSectionReducer(state = initialState, action) {\n    switch (action.type) {\n        /**\n         * add car\n         */\n        case Actions.ADD_PART_SECTION:\n            return {\n                ...state,\n                createSuccess: false,\n                createError: null\n            };\n        case Actions.ADD_PART_SECTION_SUCCESS:\n            return {\n                ...state,\n                pager: state.partSections.concat(action.pager),\n                createSuccess: true,\n                createError: null\n            };\n        case Actions.ADD_PART_SECTION_ERROR:\n            return {\n                ...state,\n                data: action.payload,\n                createSuccess: false,\n                createError: action.payload\n            };\n        /**\n         * load master\n         */\n        case Actions.LOAD_PART_SECTION:\n            return {\n                ...state,\n            };\n        case Actions.LOAD_PART_SECTION_SUCCESS:\n            return {\n                ...state,\n                partSections: action.payload,\n                pager: action.pager\n            };\n        case Actions.LOAD_PART_SECTION_ERROR:\n            return {\n                ...state,\n                data: action.payload,\n            };\n        /**\n         * delete part section\n         */\n         case Actions.DELETE_PART_SECTION:\n            return {\n                ...state,\n                deleteSuccess: false,\n                deleteError: null\n            };\n         case Actions.DELETE_PART_SECTION_SUCCESS:\n            return {\n                ...state,\n                partSections: state.partSections.filter(item => item.ID !== action.payload),\n                deleteSuccess: true,\n                deleteError: null\n            }\n        case Actions.DELETE_PART_SECTION_ERROR:\n            return {\n                ...state,\n                deleteSuccess: false,\n                deleteError: action.error\n            }\n        /**\n         * update part section\n         */\n         case Actions.UPDATE_PART_SECTION:\n            return {\n                ...state,\n            };\n        case Actions.UPDATE_PART_SECTION_SUCCESS:\n            return {\n                ...state,\n                partSections: state.partSections.map(    \n                    (items, index) => \n                        items.ID === action.payload[0].ID ? \n                            {...items, Name : action.payload[0].Name }    \n                                : items\n                    ),\n            };\n        case Actions.UPDATE_PART_SECTION_ERROR:\n            return {\n                ...state,\n            };\n        default: \n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}